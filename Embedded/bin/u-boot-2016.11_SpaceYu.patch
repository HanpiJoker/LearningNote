diff -urN u-boot-2016.11/arch/arm/config.mk u-boot-2016.11_SpaceYu/arch/arm/config.mk
--- u-boot-2016.11/arch/arm/config.mk	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/arch/arm/config.mk	2018-03-19 16:40:06.702384078 +0800
@@ -86,7 +86,7 @@
 endif
 
 # needed for relocation
-LDFLAGS_u-boot += -pie
+# LDFLAGS_u-boot += -pie
 
 #
 # FIXME: binutils versions < 2.22 have a bug in the assembler where
@@ -108,7 +108,7 @@
 
 ifneq ($(CONFIG_SPL_BUILD),y)
 # Check that only R_ARM_RELATIVE relocations are generated.
-ALL-y += checkarmreloc
+# ALL-y += checkarmreloc
 # The movt / movw can hardcode 16 bit parts of the addresses in the
 # instruction. Relocation is not supported for that case, so disable
 # such usage by requiring word relocations.
diff -urN u-boot-2016.11/arch/arm/cpu/arm920t/start.S u-boot-2016.11_SpaceYu/arch/arm/cpu/arm920t/start.S
--- u-boot-2016.11/arch/arm/cpu/arm920t/start.S	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/arch/arm/cpu/arm920t/start.S	2018-03-19 17:39:32.606031280 +0800
@@ -80,11 +80,46 @@
 	str	r1, [r0]
 # endif
 
+    /*********************************
+    init LED
+    *********************************/
+    ldr r0, =0x56000050
+    ldr r1, =0x1500
+    str r1, [r0]
+    ldr r0, =0x56000054
+    ldr r1, = 0xEF
+    str r1, [r0]
 	/* FCLK:HCLK:PCLK = 1:2:4 */
 	/* default FCLK is 120 MHz ! */
-	ldr	r0, =CLKDIVN
-	mov	r1, #3
-	str	r1, [r0]
+
+	/* FCLK:HCLK:PCLK = 1:4:8 */
+	/* default FCLK is 120 MHz ! */
+    ldr r0, = 0x4C000014
+    mov r1, #5               
+    str r1, [r0]
+
+	/* 如果HDIVN非0，CPU的总线模式应该从“fast bus mode”变为“asynchronous bus mode” */
+	mrc	p15, 0, r1, c1, c0, 0		/* 读出控制寄存器 */ 
+	orr	r1, r1, #0xc0000000			/* 设置为“asynchronous bus mode” */
+	mcr	p15, 0, r1, c1, c0, 0		/* 写入控制寄存器 */
+
+
+#define S3C2440_MPLL_200MHZ ((0x5c<<12)|(0x01<<4)|(0x02))
+#define S3C2440_MPLL_400MHZ ((0x5c<<12)|(0x01<<4)|(0x01))
+	/* MPLLCON = S3C2440_MPLL_400MHZ */
+	ldr r0, =0x4c000004
+	ldr r1, =S3C2440_MPLL_400MHZ
+	str r1, [r0]
+
+    ldr r0, =0x56000054
+    ldr r1, = 0xDF
+    str r1, [r0]
+
+	/* 启动ICACHE */
+	mrc p15, 0, r0, c1, c0, 0	@ read control reg
+	orr r0, r0, #(1<<12)        @ r0 = r0 | (1<<12)
+	mcr	p15, 0, r0, c1, c0, 0   @ write it back
+    
 #endif	/* CONFIG_S3C24X0 */
 
 	/*
@@ -95,6 +130,10 @@
 	bl	cpu_init_crit
 #endif
 
+    ldr r0, =0x56000054
+    ldr r1, =0x8F
+    str r1, [r0]    
+
 	bl	_main
 
 /*------------------------------------------------------------------------------*/
diff -urN u-boot-2016.11/arch/arm/cpu/u-boot.lds u-boot-2016.11_SpaceYu/arch/arm/cpu/u-boot.lds
--- u-boot-2016.11/arch/arm/cpu/u-boot.lds	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/arch/arm/cpu/u-boot.lds	2018-03-19 16:55:24.191727543 +0800
@@ -44,6 +44,9 @@
 		*(.__image_copy_start)
 		*(.vectors)
 		CPUDIR/start.o (.text*)
+        arch/arm/lib/crt0.o (.text*)
+        arch/arm/lib/vectors.o (.text*)
+        board/samsung/smdk2440/built-in.o(.text*)
 		*(.text*)
 	}
 
diff -urN u-boot-2016.11/arch/arm/Kconfig u-boot-2016.11_SpaceYu/arch/arm/Kconfig
--- u-boot-2016.11/arch/arm/Kconfig	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/arch/arm/Kconfig	2018-03-18 20:17:54.550063838 +0800
@@ -145,6 +145,10 @@
 	bool "Support smdk2410"
 	select CPU_ARM920T
 
+config TARGET_SMDK2440
+	bool "Support smdk2440"
+	select CPU_ARM920T
+
 config TARGET_ASPENITE
 	bool "Support aspenite"
 	select CPU_ARM926EJS
@@ -991,7 +995,7 @@
 source "board/phytec/pcm051/Kconfig"
 source "board/phytec/pcm052/Kconfig"
 source "board/ppcag/bg0900/Kconfig"
-source "board/samsung/smdk2410/Kconfig"
+source "board/samsung/smdk2440/Kconfig"
 source "board/sandisk/sansa_fuze_plus/Kconfig"
 source "board/schulercontrol/sc_sps_1/Kconfig"
 source "board/siemens/draco/Kconfig"
diff -urN u-boot-2016.11/arch/arm/lib/crt0.S u-boot-2016.11_SpaceYu/arch/arm/lib/crt0.S
--- u-boot-2016.11/arch/arm/lib/crt0.S	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/arch/arm/lib/crt0.S	2018-03-19 18:09:02.978535236 +0800
@@ -74,6 +74,7 @@
 	ldr	sp, =(CONFIG_SPL_STACK)
 #else
 	ldr	sp, =(CONFIG_SYS_INIT_SP_ADDR)
+    # sp = 0x30000000 + 0x1000
 #endif
 #if defined(CONFIG_CPU_V7M)	/* v7M forbids using SP as BIC destination */
 	mov	r3, sp
@@ -82,16 +83,47 @@
 #else
 	bic	sp, sp, #7	/* 8-byte alignment for ABI compliance */
 #endif
+
+    /**************************************
+    init LED
+    LED0 on
+    **************************************/
+    ldr r0, =0x56000054
+    ldr r1, =0xFF
+    str r1, [r0]    
+
+    /**************************
+    start to init nand and copy code to RAM
+    **************************/
+    bl s3c2440_nand_init_for_start
+
+    ldr r0, =0
+    ldr r1, =_start
+    ldr r2, =__bss_start
+    sub r2, r2, r1
+    bl copy_code_to_sdram_for_start
+
+    bl clear_bss_for_start
+
+    ldr pc, =START_ON_RAM    
+
+START_ON_RAM:
 	mov	r0, sp
 	bl	board_init_f_alloc_reserve
 	mov	sp, r0
+    # sp = 0x30001000 - sizeof(struct global_data), Align(16)
 	/* set up gd here, outside any C code */
 	mov	r9, r0
 	bl	board_init_f_init_reserve
+    # r9 = 0x30001000 - sizeof(struct global_data), Align(16)
 
 	mov	r0, #0
 	bl	board_init_f
 
+    ldr r0, =0x56000054
+    ldr r1, =0xCF
+    str r1, [r0]
+
 #if ! defined(CONFIG_SPL_BUILD)
 
 /*
@@ -118,17 +150,19 @@
 	orr	lr, #1				/* As required by Thumb-only */
 #endif
 	ldr	r0, [r9, #GD_RELOCADDR]		/* r0 = gd->relocaddr */
-	b	relocate_code
+	# b	relocate_code
+    ldr r2, =__rel_dyn_start
+    ldr r3, =__rel_dyn_end
 here:
 /*
  * now relocate vectors
  */
 
-	bl	relocate_vectors
+	# bl	relocate_vectors
 
 /* Set up final (full) environment */
 
-	bl	c_runtime_cpu_setup	/* we still call old routine here */
+	# bl	c_runtime_cpu_setup	/* we still call old routine here */
 #endif
 #if !defined(CONFIG_SPL_BUILD) || defined(CONFIG_SPL_FRAMEWORK)
 # ifdef CONFIG_SPL_BUILD
@@ -138,6 +172,7 @@
 	movne	sp, r0
 	movne	r9, r0
 # endif
+#if 0
 	ldr	r0, =__bss_start	/* this is auto-relocated! */
 
 #ifdef CONFIG_USE_ARCH_MEMSET
@@ -158,7 +193,7 @@
 	addlo	r0, r0, #4		/* move to next */
 	blo	clbss_l
 #endif
-
+#endif
 #if ! defined(CONFIG_SPL_BUILD)
 	bl coloured_LED_init
 	bl red_led_on
diff -urN u-boot-2016.11/arch/arm/lib/Makefile u-boot-2016.11_SpaceYu/arch/arm/lib/Makefile
--- u-boot-2016.11/arch/arm/lib/Makefile	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/arch/arm/lib/Makefile	2018-03-19 16:52:58.137782761 +0800
@@ -14,7 +14,7 @@
 else ifdef CONFIG_ARM64
 obj-y	+= crt0_64.o
 else
-obj-y	+= vectors.o crt0.o
+extra-y	+= vectors.o crt0.o
 endif
 
 ifndef CONFIG_SPL_BUILD
diff -urN u-boot-2016.11/board/samsung/smdk2410/Kconfig u-boot-2016.11_SpaceYu/board/samsung/smdk2410/Kconfig
--- u-boot-2016.11/board/samsung/smdk2410/Kconfig	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/board/samsung/smdk2410/Kconfig	1970-01-01 08:00:00.000000000 +0800
@@ -1,15 +0,0 @@
-if TARGET_SMDK2410
-
-config SYS_BOARD
-	default "smdk2410"
-
-config SYS_VENDOR
-	default "samsung"
-
-config SYS_SOC
-	default "s3c24x0"
-
-config SYS_CONFIG_NAME
-	default "smdk2410"
-
-endif
diff -urN u-boot-2016.11/board/samsung/smdk2410/lowlevel_init.S u-boot-2016.11_SpaceYu/board/samsung/smdk2410/lowlevel_init.S
--- u-boot-2016.11/board/samsung/smdk2410/lowlevel_init.S	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/board/samsung/smdk2410/lowlevel_init.S	1970-01-01 08:00:00.000000000 +0800
@@ -1,146 +0,0 @@
-/*
- * Memory Setup stuff - taken from blob memsetup.S
- *
- * Copyright (C) 1999 2000 2001 Erik Mouw (J.A.K.Mouw@its.tudelft.nl) and
- *                     Jan-Derk Bakker (J.D.Bakker@its.tudelft.nl)
- *
- * Modified for the Samsung SMDK2410 by
- * (C) Copyright 2002
- * David Mueller, ELSOFT AG, <d.mueller@elsoft.ch>
- *
- * SPDX-License-Identifier:	GPL-2.0+
- */
-
-
-#include <config.h>
-
-/* some parameters for the board */
-
-/*
- *
- * Taken from linux/arch/arm/boot/compressed/head-s3c2410.S
- *
- * Copyright (C) 2002 Samsung Electronics SW.LEE  <hitchcar@sec.samsung.com>
- *
- */
-
-#define BWSCON	0x48000000
-
-/* BWSCON */
-#define DW8			(0x0)
-#define DW16			(0x1)
-#define DW32			(0x2)
-#define WAIT			(0x1<<2)
-#define UBLB			(0x1<<3)
-
-#define B1_BWSCON		(DW32)
-#define B2_BWSCON		(DW16)
-#define B3_BWSCON		(DW16 + WAIT + UBLB)
-#define B4_BWSCON		(DW16)
-#define B5_BWSCON		(DW16)
-#define B6_BWSCON		(DW32)
-#define B7_BWSCON		(DW32)
-
-/* BANK0CON */
-#define B0_Tacs			0x0	/*  0clk */
-#define B0_Tcos			0x0	/*  0clk */
-#define B0_Tacc			0x7	/* 14clk */
-#define B0_Tcoh			0x0	/*  0clk */
-#define B0_Tah			0x0	/*  0clk */
-#define B0_Tacp			0x0
-#define B0_PMC			0x0	/* normal */
-
-/* BANK1CON */
-#define B1_Tacs			0x0	/*  0clk */
-#define B1_Tcos			0x0	/*  0clk */
-#define B1_Tacc			0x7	/* 14clk */
-#define B1_Tcoh			0x0	/*  0clk */
-#define B1_Tah			0x0	/*  0clk */
-#define B1_Tacp			0x0
-#define B1_PMC			0x0
-
-#define B2_Tacs			0x0
-#define B2_Tcos			0x0
-#define B2_Tacc			0x7
-#define B2_Tcoh			0x0
-#define B2_Tah			0x0
-#define B2_Tacp			0x0
-#define B2_PMC			0x0
-
-#define B3_Tacs			0x0	/*  0clk */
-#define B3_Tcos			0x3	/*  4clk */
-#define B3_Tacc			0x7	/* 14clk */
-#define B3_Tcoh			0x1	/*  1clk */
-#define B3_Tah			0x0	/*  0clk */
-#define B3_Tacp			0x3     /*  6clk */
-#define B3_PMC			0x0	/* normal */
-
-#define B4_Tacs			0x0	/*  0clk */
-#define B4_Tcos			0x0	/*  0clk */
-#define B4_Tacc			0x7	/* 14clk */
-#define B4_Tcoh			0x0	/*  0clk */
-#define B4_Tah			0x0	/*  0clk */
-#define B4_Tacp			0x0
-#define B4_PMC			0x0	/* normal */
-
-#define B5_Tacs			0x0	/*  0clk */
-#define B5_Tcos			0x0	/*  0clk */
-#define B5_Tacc			0x7	/* 14clk */
-#define B5_Tcoh			0x0	/*  0clk */
-#define B5_Tah			0x0	/*  0clk */
-#define B5_Tacp			0x0
-#define B5_PMC			0x0	/* normal */
-
-#define B6_MT			0x3	/* SDRAM */
-#define B6_Trcd			0x1
-#define B6_SCAN			0x1	/* 9bit */
-
-#define B7_MT			0x3	/* SDRAM */
-#define B7_Trcd			0x1	/* 3clk */
-#define B7_SCAN			0x1	/* 9bit */
-
-/* REFRESH parameter */
-#define REFEN			0x1	/* Refresh enable */
-#define TREFMD			0x0	/* CBR(CAS before RAS)/Auto refresh */
-#define Trp			0x0	/* 2clk */
-#define Trc			0x3	/* 7clk */
-#define Tchr			0x2	/* 3clk */
-#define REFCNT			1113	/* period=15.6us, HCLK=60Mhz, (2048+1-15.6*60) */
-/**************************************/
-
-.globl lowlevel_init
-lowlevel_init:
-	/* memory control configuration */
-	/* make r0 relative the current location so that it */
-	/* reads SMRDATA out of FLASH rather than memory ! */
-	ldr     r0, =SMRDATA
-	ldr	r1, =CONFIG_SYS_TEXT_BASE
-	sub	r0, r0, r1
-	ldr	r1, =BWSCON	/* Bus Width Status Controller */
-	add     r2, r0, #13*4
-0:
-	ldr     r3, [r0], #4
-	str     r3, [r1], #4
-	cmp     r2, r0
-	bne     0b
-
-	/* everything is fine now */
-	mov	pc, lr
-
-	.ltorg
-/* the literal pools origin */
-
-SMRDATA:
-    .word (0+(B1_BWSCON<<4)+(B2_BWSCON<<8)+(B3_BWSCON<<12)+(B4_BWSCON<<16)+(B5_BWSCON<<20)+(B6_BWSCON<<24)+(B7_BWSCON<<28))
-    .word ((B0_Tacs<<13)+(B0_Tcos<<11)+(B0_Tacc<<8)+(B0_Tcoh<<6)+(B0_Tah<<4)+(B0_Tacp<<2)+(B0_PMC))
-    .word ((B1_Tacs<<13)+(B1_Tcos<<11)+(B1_Tacc<<8)+(B1_Tcoh<<6)+(B1_Tah<<4)+(B1_Tacp<<2)+(B1_PMC))
-    .word ((B2_Tacs<<13)+(B2_Tcos<<11)+(B2_Tacc<<8)+(B2_Tcoh<<6)+(B2_Tah<<4)+(B2_Tacp<<2)+(B2_PMC))
-    .word ((B3_Tacs<<13)+(B3_Tcos<<11)+(B3_Tacc<<8)+(B3_Tcoh<<6)+(B3_Tah<<4)+(B3_Tacp<<2)+(B3_PMC))
-    .word ((B4_Tacs<<13)+(B4_Tcos<<11)+(B4_Tacc<<8)+(B4_Tcoh<<6)+(B4_Tah<<4)+(B4_Tacp<<2)+(B4_PMC))
-    .word ((B5_Tacs<<13)+(B5_Tcos<<11)+(B5_Tacc<<8)+(B5_Tcoh<<6)+(B5_Tah<<4)+(B5_Tacp<<2)+(B5_PMC))
-    .word ((B6_MT<<15)+(B6_Trcd<<2)+(B6_SCAN))
-    .word ((B7_MT<<15)+(B7_Trcd<<2)+(B7_SCAN))
-    .word ((REFEN<<23)+(TREFMD<<22)+(Trp<<20)+(Trc<<18)+(Tchr<<16)+REFCNT)
-    .word 0x32
-    .word 0x30
-    .word 0x30
diff -urN u-boot-2016.11/board/samsung/smdk2410/MAINTAINERS u-boot-2016.11_SpaceYu/board/samsung/smdk2410/MAINTAINERS
--- u-boot-2016.11/board/samsung/smdk2410/MAINTAINERS	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/board/samsung/smdk2410/MAINTAINERS	1970-01-01 08:00:00.000000000 +0800
@@ -1,6 +0,0 @@
-SMDK2410 BOARD
-M:	David Müller <d.mueller@elsoft.ch>
-S:	Maintained
-F:	board/samsung/smdk2410/
-F:	include/configs/smdk2410.h
-F:	configs/smdk2410_defconfig
diff -urN u-boot-2016.11/board/samsung/smdk2410/Makefile u-boot-2016.11_SpaceYu/board/samsung/smdk2410/Makefile
--- u-boot-2016.11/board/samsung/smdk2410/Makefile	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/board/samsung/smdk2410/Makefile	1970-01-01 08:00:00.000000000 +0800
@@ -1,9 +0,0 @@
-#
-# (C) Copyright 2000-2006
-# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
-#
-# SPDX-License-Identifier:	GPL-2.0+
-#
-
-obj-y	:= smdk2410.o
-obj-y	+= lowlevel_init.o
diff -urN u-boot-2016.11/board/samsung/smdk2410/smdk2410.c u-boot-2016.11_SpaceYu/board/samsung/smdk2410/smdk2410.c
--- u-boot-2016.11/board/samsung/smdk2410/smdk2410.c	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/board/samsung/smdk2410/smdk2410.c	1970-01-01 08:00:00.000000000 +0800
@@ -1,139 +0,0 @@
-/*
- * (C) Copyright 2002
- * Sysgo Real-Time Solutions, GmbH <www.elinos.com>
- * Marius Groeger <mgroeger@sysgo.de>
- *
- * (C) Copyright 2002, 2010
- * David Mueller, ELSOFT AG, <d.mueller@elsoft.ch>
- *
- * SPDX-License-Identifier:	GPL-2.0+
- */
-
-#include <common.h>
-#include <netdev.h>
-#include <asm/io.h>
-#include <asm/arch/s3c24x0_cpu.h>
-
-DECLARE_GLOBAL_DATA_PTR;
-
-#define FCLK_SPEED 1
-
-#if (FCLK_SPEED == 0)		/* Fout = 203MHz, Fin = 12MHz for Audio */
-#define M_MDIV	0xC3
-#define M_PDIV	0x4
-#define M_SDIV	0x1
-#elif (FCLK_SPEED == 1)		/* Fout = 202.8MHz */
-#define M_MDIV	0xA1
-#define M_PDIV	0x3
-#define M_SDIV	0x1
-#endif
-
-#define USB_CLOCK 1
-
-#if (USB_CLOCK == 0)
-#define U_M_MDIV	0xA1
-#define U_M_PDIV	0x3
-#define U_M_SDIV	0x1
-#elif (USB_CLOCK == 1)
-#define U_M_MDIV	0x48
-#define U_M_PDIV	0x3
-#define U_M_SDIV	0x2
-#endif
-
-static inline void pll_delay(unsigned long loops)
-{
-	__asm__ volatile ("1:\n"
-	  "subs %0, %1, #1\n"
-	  "bne 1b" : "=r" (loops) : "0" (loops));
-}
-
-/*
- * Miscellaneous platform dependent initialisations
- */
-
-int board_early_init_f(void)
-{
-	struct s3c24x0_clock_power * const clk_power =
-					s3c24x0_get_base_clock_power();
-	struct s3c24x0_gpio * const gpio = s3c24x0_get_base_gpio();
-
-	/* to reduce PLL lock time, adjust the LOCKTIME register */
-	writel(0xFFFFFF, &clk_power->locktime);
-
-	/* configure MPLL */
-	writel((M_MDIV << 12) + (M_PDIV << 4) + M_SDIV,
-	       &clk_power->mpllcon);
-
-	/* some delay between MPLL and UPLL */
-	pll_delay(4000);
-
-	/* configure UPLL */
-	writel((U_M_MDIV << 12) + (U_M_PDIV << 4) + U_M_SDIV,
-	       &clk_power->upllcon);
-
-	/* some delay between MPLL and UPLL */
-	pll_delay(8000);
-
-	/* set up the I/O ports */
-	writel(0x007FFFFF, &gpio->gpacon);
-	writel(0x00044555, &gpio->gpbcon);
-	writel(0x000007FF, &gpio->gpbup);
-	writel(0xAAAAAAAA, &gpio->gpccon);
-	writel(0x0000FFFF, &gpio->gpcup);
-	writel(0xAAAAAAAA, &gpio->gpdcon);
-	writel(0x0000FFFF, &gpio->gpdup);
-	writel(0xAAAAAAAA, &gpio->gpecon);
-	writel(0x0000FFFF, &gpio->gpeup);
-	writel(0x000055AA, &gpio->gpfcon);
-	writel(0x000000FF, &gpio->gpfup);
-	writel(0xFF95FFBA, &gpio->gpgcon);
-	writel(0x0000FFFF, &gpio->gpgup);
-	writel(0x002AFAAA, &gpio->gphcon);
-	writel(0x000007FF, &gpio->gphup);
-
-	return 0;
-}
-
-int board_init(void)
-{
-	/* arch number of SMDK2410-Board */
-	gd->bd->bi_arch_number = MACH_TYPE_SMDK2410;
-
-	/* adress of boot parameters */
-	gd->bd->bi_boot_params = 0x30000100;
-
-	icache_enable();
-	dcache_enable();
-
-	return 0;
-}
-
-int dram_init(void)
-{
-	/* dram_init must store complete ramsize in gd->ram_size */
-	gd->ram_size = PHYS_SDRAM_1_SIZE;
-	return 0;
-}
-
-#ifdef CONFIG_CMD_NET
-int board_eth_init(bd_t *bis)
-{
-	int rc = 0;
-#ifdef CONFIG_CS8900
-	rc = cs8900_initialize(0, CONFIG_CS8900_BASE);
-#endif
-	return rc;
-}
-#endif
-
-/*
- * Hardcoded flash setup:
- * Flash 0 is a non-CFI AMD AM29LV800BB flash.
- */
-ulong board_flash_get_legacy(ulong base, int banknum, flash_info_t *info)
-{
-	info->portwidth = FLASH_CFI_16BIT;
-	info->chipwidth = FLASH_CFI_BY16;
-	info->interface = FLASH_CFI_X16;
-	return 1;
-}
diff -urN u-boot-2016.11/board/samsung/smdk2440/init.c u-boot-2016.11_SpaceYu/board/samsung/smdk2440/init.c
--- u-boot-2016.11/board/samsung/smdk2440/init.c	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-2016.11_SpaceYu/board/samsung/smdk2440/init.c	2018-03-19 17:31:24.074628559 +0800
@@ -0,0 +1,165 @@
+
+/* NAND FLASH控制器 */
+#define NFCONF (*((volatile unsigned long *)0x4E000000))
+#define NFCONT (*((volatile unsigned long *)0x4E000004))
+#define NFCMMD (*((volatile unsigned char *)0x4E000008))
+#define NFADDR (*((volatile unsigned char *)0x4E00000C))
+#define NFDATA (*((volatile unsigned char *)0x4E000010))
+#define NFSTAT (*((volatile unsigned char *)0x4E000020))
+
+/* GPIO */
+#define GPHCON              (*(volatile unsigned long *)0x56000070)
+#define GPHUP               (*(volatile unsigned long *)0x56000078)
+
+/* UART registers*/
+#define ULCON0              (*(volatile unsigned long *)0x50000000)
+#define UCON0               (*(volatile unsigned long *)0x50000004)
+#define UFCON0              (*(volatile unsigned long *)0x50000008)
+#define UMCON0              (*(volatile unsigned long *)0x5000000c)
+#define UTRSTAT0            (*(volatile unsigned long *)0x50000010)
+#define UTXH0               (*(volatile unsigned char *)0x50000020)
+#define URXH0               (*(volatile unsigned char *)0x50000024)
+#define UBRDIV0             (*(volatile unsigned long *)0x50000028)
+
+#define TXD0READY   (1<<2)
+
+
+void s3c2440_nand_read_for_start(unsigned int addr, unsigned char *buf, unsigned int len);
+
+
+static int isBootFromNOR(void)
+{
+	volatile int *p = (volatile int *)0;
+	int val;
+
+	val = *p;
+	*p = 0x12345678;
+	if (*p == 0x12345678) {
+		/* 写成功，是nand启动 */
+		*p = val;
+		return 0;
+	} else {
+		/* NOR 不能像内存一样写 */
+		return 1;
+	}
+	
+}
+
+void copy_code_to_sdram_for_start (unsigned char *src, unsigned char *dst, unsigned int len) 
+{
+	int i = 0;
+	
+	if (isBootFromNOR()) {
+		while(i < len)
+		{
+			dst[i] = src[i];
+			i++;
+		}
+	} else {
+		s3c2440_nand_read_for_start((unsigned int)src, dst, len);
+	}
+}
+
+void clear_bss_for_start(void)
+{
+	extern int __bss_start, __bss_end;
+	int *p = &__bss_start;
+	
+	for (; p < &__bss_end; p++)
+		*p = 0;
+}
+
+void s3c2440_nand_init_for_start(void)
+{
+#define TACLS   0
+#define TWRPH0  1
+#define TWRPH1  0
+	/* 设置时序 */
+	NFCONF = (TACLS<<12)|(TWRPH0<<8)|(TWRPH1<<4);
+	/* 使能NAND Flash控制器，初始化ECC，禁止片选 */
+	NFCONT = (1<<4)|(1<<1)|(1<<0);
+}
+
+static void nand_select(void)
+{
+	NFCONT &= ~(1<<1);	
+}
+
+static void nand_deselect(void)
+{
+	NFCONT |= (1<<1);	
+}
+
+static void nand_cmd(unsigned char cmd)
+{
+	volatile int i;
+	NFCMMD = cmd;
+	for (i = 0; i < 10; i++);
+}
+
+static void nand_addr(unsigned int addr)
+{
+	unsigned int col  = addr % 2048;
+	unsigned int page = addr / 2048;
+	volatile int i;
+
+	NFADDR = col & 0xff;
+	for (i = 0; i < 10; i++);
+	NFADDR = (col >> 8) & 0xff;
+	for (i = 0; i < 10; i++);
+	
+	NFADDR  = page & 0xff;
+	for (i = 0; i < 10; i++);
+	NFADDR  = (page >> 8) & 0xff;
+	for (i = 0; i < 10; i++);
+	NFADDR  = (page >> 16) & 0xff;
+	for (i = 0; i < 10; i++);	
+}
+
+static void nand_wait_ready(void)
+{
+	while (!(NFSTAT & 1));
+}
+
+static unsigned char nand_data(void)
+{
+	return NFDATA;
+}
+
+void s3c2440_nand_read_for_start(unsigned int addr, unsigned char *buf, unsigned int len)
+{
+	int col = addr % 2048;
+	int i = 0;
+		
+	/* 1. 选中 */
+	nand_select();
+
+	while (i < len)
+	{
+		/* 2. 发出读命令00h */
+		nand_cmd(0x00);
+
+		/* 3. 发出地址(分5步发出) */
+		nand_addr(addr);
+
+		/* 4. 发出读命令30h */
+		nand_cmd(0x30);
+
+		/* 5. 判断状态 */
+		nand_wait_ready();
+
+		/* 6. 读数据 */
+		for (; (col < 2048) && (i < len); col++)
+		{
+			buf[i] = nand_data();
+			i++;
+			addr++;
+		}
+		
+		col = 0;
+	}
+
+	/* 7. 取消选中 */		
+	nand_deselect();
+}
+
diff -urN u-boot-2016.11/board/samsung/smdk2440/Kconfig u-boot-2016.11_SpaceYu/board/samsung/smdk2440/Kconfig
--- u-boot-2016.11/board/samsung/smdk2440/Kconfig	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-2016.11_SpaceYu/board/samsung/smdk2440/Kconfig	2018-03-18 20:31:38.920215609 +0800
@@ -0,0 +1,15 @@
+if TARGET_SMDK2440
+
+config SYS_BOARD
+	default "smdk2440"
+
+config SYS_VENDOR
+	default "samsung"
+
+config SYS_SOC
+	default "s3c24x0"
+
+config SYS_CONFIG_NAME
+	default "smdk2440"
+
+endif
diff -urN u-boot-2016.11/board/samsung/smdk2440/lowlevel_init.S u-boot-2016.11_SpaceYu/board/samsung/smdk2440/lowlevel_init.S
--- u-boot-2016.11/board/samsung/smdk2440/lowlevel_init.S	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-2016.11_SpaceYu/board/samsung/smdk2440/lowlevel_init.S	2018-03-19 14:52:24.734067990 +0800
@@ -0,0 +1,147 @@
+/*
+ * Memory Setup stuff - taken from blob memsetup.S
+ *
+ * Copyright (C) 1999 2000 2001 Erik Mouw (J.A.K.Mouw@its.tudelft.nl) and
+ *                     Jan-Derk Bakker (J.D.Bakker@its.tudelft.nl)
+ *
+ * Modified for the Samsung SMDK2410 by
+ * (C) Copyright 2002
+ * David Mueller, ELSOFT AG, <d.mueller@elsoft.ch>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+
+#include <config.h>
+
+/* some parameters for the board */
+
+/*
+ *
+ * Taken from linux/arch/arm/boot/compressed/head-s3c2410.S
+ *
+ * Copyright (C) 2002 Samsung Electronics SW.LEE  <hitchcar@sec.samsung.com>
+ *
+ */
+
+#define BWSCON	0x48000000
+
+/* BWSCON */
+#define DW8			(0x0)
+#define DW16			(0x1)
+#define DW32			(0x2)
+#define WAIT			(0x1<<2)
+#define UBLB			(0x1<<3)
+
+#define B1_BWSCON		(DW32)
+#define B2_BWSCON		(DW16)
+#define B3_BWSCON		(DW16 + WAIT + UBLB)
+#define B4_BWSCON		(DW16)
+#define B5_BWSCON		(DW16)
+#define B6_BWSCON		(DW32)
+#define B7_BWSCON		(DW32)
+
+/* BANK0CON */
+#define B0_Tacs			0x0	/*  0clk */
+#define B0_Tcos			0x0	/*  0clk */
+#define B0_Tacc			0x7	/* 14clk */
+#define B0_Tcoh			0x0	/*  0clk */
+#define B0_Tah			0x0	/*  0clk */
+#define B0_Tacp			0x0
+#define B0_PMC			0x0	/* normal */
+
+/* BANK1CON */
+#define B1_Tacs			0x0	/*  0clk */
+#define B1_Tcos			0x0	/*  0clk */
+#define B1_Tacc			0x7	/* 14clk */
+#define B1_Tcoh			0x0	/*  0clk */
+#define B1_Tah			0x0	/*  0clk */
+#define B1_Tacp			0x0
+#define B1_PMC			0x0
+
+#define B2_Tacs			0x0
+#define B2_Tcos			0x0
+#define B2_Tacc			0x7
+#define B2_Tcoh			0x0
+#define B2_Tah			0x0
+#define B2_Tacp			0x0
+#define B2_PMC			0x0
+
+#define B3_Tacs			0x0	/*  0clk */
+#define B3_Tcos			0x3	/*  4clk */
+#define B3_Tacc			0x7	/* 14clk */
+#define B3_Tcoh			0x1	/*  1clk */
+#define B3_Tah			0x0	/*  0clk */
+#define B3_Tacp			0x3     /*  6clk */
+#define B3_PMC			0x0	/* normal */
+
+#define B4_Tacs			0x0	/*  0clk */
+#define B4_Tcos			0x0	/*  0clk */
+#define B4_Tacc			0x7	/* 14clk */
+#define B4_Tcoh			0x0	/*  0clk */
+#define B4_Tah			0x0	/*  0clk */
+#define B4_Tacp			0x0
+#define B4_PMC			0x0	/* normal */
+
+#define B5_Tacs			0x0	/*  0clk */
+#define B5_Tcos			0x0	/*  0clk */
+#define B5_Tacc			0x7	/* 14clk */
+#define B5_Tcoh			0x0	/*  0clk */
+#define B5_Tah			0x0	/*  0clk */
+#define B5_Tacp			0x0
+#define B5_PMC			0x0	/* normal */
+
+#define B6_MT			0x3	/* SDRAM */
+#define B6_Trcd			0x1
+#define B6_SCAN			0x1	/* 9bit */
+
+#define B7_MT			0x3	/* SDRAM */
+#define B7_Trcd			0x1	/* 3clk */
+#define B7_SCAN			0x1	/* 9bit */
+
+/* REFRESH parameter */
+#define REFEN			0x1	/* Refresh enable */
+#define TREFMD			0x0	/* CBR(CAS before RAS)/Auto refresh */
+#define Trp			0x0	/* 2clk */
+#define Trc			0x3	/* 7clk */
+#define Tchr			0x2	/* 3clk */
+#define REFCNT			1113	/* period=15.6us, HCLK=60Mhz, (2048+1-15.6*60) */
+/**************************************/
+
+.globl lowlevel_init
+lowlevel_init:
+	/* memory control configuration */
+	/* make r0 relative the current location so that it */
+	/* reads SMRDATA out of FLASH rather than memory ! */
+	ldr     r0, =SMRDATA
+	ldr	r1, =CONFIG_SYS_TEXT_BASE
+	sub	r0, r0, r1
+	ldr	r1, =BWSCON	/* Bus Width Status Controller */
+	add     r2, r0, #13*4
+0:
+	ldr     r3, [r0], #4
+	str     r3, [r1], #4
+	cmp     r2, r0
+	bne     0b
+
+	/* everything is fine now */
+	mov	pc, lr
+
+	.ltorg
+/* the literal pools origin */
+
+SMRDATA:
+	.long 0x22011110	 //BWSCON
+	.long 0x00000700	 //BANKCON0
+	.long 0x00000700	 //BANKCON1
+	.long 0x00000700	 //BANKCON2
+	.long 0x00000700	 //BANKCON3  
+	.long 0x00000700	 //BANKCON4
+	.long 0x00000700	 //BANKCON5
+	.long 0x00018005	 //BANKCON6
+	.long 0x00018005	 //BANKCON7
+	.long 0x008C04F4	 // REFRESH
+	.long 0x000000B1	 //BANKSIZE
+	.long 0x00000030	 //MRSRB6
+	.long 0x00000030	 //MRSRB7
+
diff -urN u-boot-2016.11/board/samsung/smdk2440/MAINTAINERS u-boot-2016.11_SpaceYu/board/samsung/smdk2440/MAINTAINERS
--- u-boot-2016.11/board/samsung/smdk2440/MAINTAINERS	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-2016.11_SpaceYu/board/samsung/smdk2440/MAINTAINERS	2018-03-18 20:31:54.746331159 +0800
@@ -0,0 +1,6 @@
+SMDK2410 BOARD
+M:	David Müller <d.mueller@elsoft.ch>
+S:	Maintained
+F:	board/samsung/smdk2440/
+F:	include/configs/smdk2440.h
+F:	configs/smdk2410_defconfig
diff -urN u-boot-2016.11/board/samsung/smdk2440/Makefile u-boot-2016.11_SpaceYu/board/samsung/smdk2440/Makefile
--- u-boot-2016.11/board/samsung/smdk2440/Makefile	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-2016.11_SpaceYu/board/samsung/smdk2440/Makefile	2018-03-19 16:45:10.162172648 +0800
@@ -0,0 +1,9 @@
+#
+# (C) Copyright 2000-2006
+# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
+#
+# SPDX-License-Identifier:	GPL-2.0+
+#
+
+obj-y	:= smdk2440.o init.o
+obj-y	+= lowlevel_init.o
diff -urN u-boot-2016.11/board/samsung/smdk2440/smdk2440.c u-boot-2016.11_SpaceYu/board/samsung/smdk2440/smdk2440.c
--- u-boot-2016.11/board/samsung/smdk2440/smdk2440.c	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-2016.11_SpaceYu/board/samsung/smdk2440/smdk2440.c	2018-03-19 22:08:44.841863438 +0800
@@ -0,0 +1,143 @@
+/*
+ * (C) Copyright 2002
+ * Sysgo Real-Time Solutions, GmbH <www.elinos.com>
+ * Marius Groeger <mgroeger@sysgo.de>
+ *
+ * (C) Copyright 2002, 2010
+ * David Mueller, ELSOFT AG, <d.mueller@elsoft.ch>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <netdev.h>
+#include <asm/io.h>
+#include <asm/arch/s3c24x0_cpu.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#define FCLK_SPEED 1
+
+#if (FCLK_SPEED == 0)		/* Fout = 203MHz, Fin = 12MHz for Audio */
+#define M_MDIV	0xC3
+#define M_PDIV	0x4
+#define M_SDIV	0x1
+#elif (FCLK_SPEED == 1)		/* Fout = 202.8MHz */
+#define M_MDIV	0xA1
+#define M_PDIV	0x3
+#define M_SDIV	0x1
+#endif
+
+#define USB_CLOCK 1
+
+#if (USB_CLOCK == 0)
+#define U_M_MDIV	0xA1
+#define U_M_PDIV	0x3
+#define U_M_SDIV	0x1
+#elif (USB_CLOCK == 1)
+#define U_M_MDIV	0x48
+#define U_M_PDIV	0x3
+#define U_M_SDIV	0x2
+#endif
+
+static inline void pll_delay(unsigned long loops)
+{
+	__asm__ volatile ("1:\n"
+	  "subs %0, %1, #1\n"
+	  "bne 1b" : "=r" (loops) : "0" (loops));
+}
+
+/*
+ * Miscellaneous platform dependent initialisations
+ */
+
+int board_early_init_f(void)
+{
+	struct s3c24x0_clock_power * const clk_power =
+					s3c24x0_get_base_clock_power();
+	struct s3c24x0_gpio * const gpio = s3c24x0_get_base_gpio();
+
+#if 0
+	/* to reduce PLL lock time, adjust the LOCKTIME register */
+	writel(0xFFFFFF, &clk_power->locktime);
+
+	/* configure MPLL */
+	writel((M_MDIV << 12) + (M_PDIV << 4) + M_SDIV,
+	       &clk_power->mpllcon);
+
+	/* some delay between MPLL and UPLL */
+	pll_delay(4000);
+#endif
+	/* configure UPLL */
+	writel((U_M_MDIV << 12) + (U_M_PDIV << 4) + U_M_SDIV,
+	       &clk_power->upllcon);
+
+	/* some delay between MPLL and UPLL */
+	pll_delay(8000);
+
+	/* set up the I/O ports */
+	writel(0x007FFFFF, &gpio->gpacon);
+	writel(0x00044555, &gpio->gpbcon);
+	writel(0x000007FF, &gpio->gpbup);
+	writel(0xAAAAAAAA, &gpio->gpccon);
+	writel(0x0000FFFF, &gpio->gpcup);
+	writel(0xAAAAAAAA, &gpio->gpdcon);
+	writel(0x0000FFFF, &gpio->gpdup);
+	writel(0xAAAAAAAA, &gpio->gpecon);
+	writel(0x0000FFFF, &gpio->gpeup);
+	/* writel(0x000055AA, &gpio->gpfcon); */
+	writel(0x000000FF, &gpio->gpfup);
+	writel(0xFF95FFBA, &gpio->gpgcon);
+	writel(0x0000FFFF, &gpio->gpgup);
+	writel(0x002AFAAA, &gpio->gphcon);
+	writel(0x000007FF, &gpio->gphup);
+
+	return 0;
+}
+
+int board_init(void)
+{
+	/* arch number of SMDK2410-Board */
+	gd->bd->bi_arch_number = MACH_TYPE_S3C2440;
+
+	/* adress of boot parameters */
+	gd->bd->bi_boot_params = 0x30000100;
+
+	icache_enable();
+	dcache_enable();
+
+	return 0;
+}
+
+int dram_init(void)
+{
+	/* dram_init must store complete ramsize in gd->ram_size */
+	gd->ram_size = PHYS_SDRAM_1_SIZE;
+	return 0;
+}
+
+#ifdef CONFIG_CMD_NET
+int board_eth_init(bd_t *bis)
+{
+	int rc = 0;
+#ifdef CONFIG_CS8900
+	rc = cs8900_initialize(0, CONFIG_CS8900_BASE);
+#endif
+#ifdef CONFIG_DRIVER_DM9000
+    rc = dm9000_initialize(bis);
+#endif
+	return rc;
+}
+#endif
+
+/*
+ * Hardcoded flash setup:
+ * Flash 0 is a non-CFI AMD AM29LV800BB flash.
+ */
+ulong board_flash_get_legacy(ulong base, int banknum, flash_info_t *info)
+{
+	info->portwidth = FLASH_CFI_16BIT;
+	info->chipwidth = FLASH_CFI_BY16;
+	info->interface = FLASH_CFI_X16;
+	return 1;
+}
diff -urN u-boot-2016.11/cmd/nand.c u-boot-2016.11_SpaceYu/cmd/nand.c
--- u-boot-2016.11/cmd/nand.c	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/cmd/nand.c	2018-03-19 22:22:37.453840533 +0800
@@ -623,6 +623,16 @@
 						maxsize, (u_char *)addr,
 						WITH_DROP_FFS | WITH_WR_VERIFY);
 #endif
+#ifdef CONFIG_CMD_NAND_YAFFS
+        } else if (!strcmp(s, ".yaffs2")) {
+            if(read) {
+                printf("Unknown nand command suffix `%s`.\n", s);
+                return 1;
+            }
+            ret = nand_write_skip_bad(mtd, off, &rwsize, NULL, 
+                        maxsize, (u_char *)addr,
+                        WITH_YAFFS_OOB);
+#endif
 		} else if (!strcmp(s, ".oob")) {
 			/* out-of-band data */
 			mtd_oob_ops_t ops = {
@@ -820,6 +830,11 @@
 	"    bring nand to lock state or display locked pages\n"
 	"nand unlock[.allexcept] [offset] [size] - unlock section"
 #endif
+#ifdef CONFIG_CMD_NAND_YAFFS
+    "nand write.yaffs2 - addr off|partition size\n"
+    "    write ‘size‘ bytes starting at offset ‘off‘ with yaffs format\n"
+    "    from memory address ‘addr‘, skipping bad blocks.\n"
+#endif
 #ifdef CONFIG_ENV_OFFSET_OOB
 	"\n"
 	"nand env.oob - environment offset in OOB of block 0 of"
diff -urN u-boot-2016.11/common/board_f.c u-boot-2016.11_SpaceYu/common/board_f.c
--- u-boot-2016.11/common/board_f.c	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/common/board_f.c	2018-03-19 18:15:14.787232983 +0800
@@ -517,8 +517,9 @@
 	 * reserve memory for U-Boot code, data & bss
 	 * round down to next 4 kB limit
 	 */
-	gd->relocaddr -= gd->mon_len;
-	gd->relocaddr &= ~(4096 - 1);
+	/* gd->relocaddr -= gd->mon_len; */
+	/* gd->relocaddr &= ~(4096 - 1); */
+    gd->relocaddr = (unsigned int)_start;
 #ifdef CONFIG_E500
 	/* round down to next 64 kB limit so that IVPR stays aligned */
 	gd->relocaddr &= ~(65536 - 1);
diff -urN u-boot-2016.11/common/board_r.c u-boot-2016.11_SpaceYu/common/board_r.c
--- u-boot-2016.11/common/board_r.c	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/common/board_r.c	2018-03-19 21:32:05.792161857 +0800
@@ -73,6 +73,12 @@
 extern int prom_init(void);
 #endif
 
+#ifdef CONFIG_DRIVER_DM9000
+extern int dm9000_init(struct eth_device *dev, bd_t *bd);
+#endif
+
+extern int mtdparts_init(void);
+
 ulong monitor_flash_len;
 
 __weak int board_flash_wp_on(void)
@@ -656,6 +662,9 @@
 	debug("Reset Ethernet PHY\n");
 	reset_phy();
 #endif
+#ifdef CONFIG_DRIVER_DM9000 
+    dm9000_init(NULL, gd->bd);
+#endif
 	return 0;
 }
 #endif
@@ -969,6 +978,7 @@
 #if defined(CONFIG_SPARC)
 	prom_init,
 #endif
+    mtdparts_init,
 	run_main_loop,
 };
 
diff -urN u-boot-2016.11/configs/smdk2410_defconfig u-boot-2016.11_SpaceYu/configs/smdk2410_defconfig
--- u-boot-2016.11/configs/smdk2410_defconfig	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/configs/smdk2410_defconfig	1970-01-01 08:00:00.000000000 +0800
@@ -1,18 +0,0 @@
-CONFIG_ARM=y
-CONFIG_TARGET_SMDK2410=y
-CONFIG_BOOTDELAY=5
-# CONFIG_SYS_STDIO_DEREGISTER is not set
-# CONFIG_DISPLAY_BOARDINFO is not set
-CONFIG_HUSH_PARSER=y
-CONFIG_SYS_PROMPT="SMDK2410 # "
-CONFIG_CMD_USB=y
-# CONFIG_CMD_SETEXPR is not set
-CONFIG_CMD_DHCP=y
-CONFIG_CMD_PING=y
-CONFIG_CMD_CACHE=y
-CONFIG_CMD_EXT2=y
-CONFIG_CMD_FAT=y
-CONFIG_CMD_UBI=y
-CONFIG_USB=y
-CONFIG_USB_STORAGE=y
-CONFIG_USB_KEYBOARD=y
diff -urN u-boot-2016.11/configs/smdk2440_defconfig u-boot-2016.11_SpaceYu/configs/smdk2440_defconfig
--- u-boot-2016.11/configs/smdk2440_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-2016.11_SpaceYu/configs/smdk2440_defconfig	2018-03-19 21:06:14.392688043 +0800
@@ -0,0 +1,18 @@
+CONFIG_ARM=y
+CONFIG_TARGET_SMDK2440=y
+CONFIG_BOOTDELAY=5
+# CONFIG_SYS_STDIO_DEREGISTER is not set
+# CONFIG_DISPLAY_BOARDINFO is not set
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="SMDK2440 # "
+# CONFIG_CMD_USB=y
+# CONFIG_CMD_SETEXPR is not set
+# CONFIG_CMD_DHCP=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_CACHE=y
+# CONFIG_CMD_EXT2=y
+# CONFIG_CMD_FAT=y
+# CONFIG_CMD_UBI=y
+# CONFIG_USB=y
+# CONFIG_USB_STORAGE=y
+# CONFIG_USB_KEYBOARD=y
diff -urN u-boot-2016.11/drivers/mtd/nand/Makefile u-boot-2016.11_SpaceYu/drivers/mtd/nand/Makefile
--- u-boot-2016.11/drivers/mtd/nand/Makefile	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/drivers/mtd/nand/Makefile	2018-03-19 17:42:43.687399342 +0800
@@ -61,6 +61,7 @@
 obj-$(CONFIG_NAND_NDFC) += ndfc.o
 obj-$(CONFIG_NAND_PXA3XX) += pxa3xx_nand.o
 obj-$(CONFIG_NAND_S3C2410) += s3c2410_nand.o
+obj-$(CONFIG_NAND_S3C2440) += s3c2440_nand.o
 obj-$(CONFIG_NAND_SPEAR) += spr_nand.o
 obj-$(CONFIG_TEGRA_NAND) += tegra_nand.o
 obj-$(CONFIG_NAND_OMAP_GPMC) += omap_gpmc.o
diff -urN u-boot-2016.11/drivers/mtd/nand/nand_util.c u-boot-2016.11_SpaceYu/drivers/mtd/nand/nand_util.c
--- u-boot-2016.11/drivers/mtd/nand/nand_util.c	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/drivers/mtd/nand/nand_util.c	2018-03-19 21:55:07.543768075 +0800
@@ -580,8 +580,24 @@
 
 	if (actual)
 		*actual = 0;
-
-	blocksize = mtd->erasesize;
+#ifdef CONFIG_CMD_NAND_YAFFS
+    if(flags & WITH_YAFFS_OOB) {
+        if(flags & ~WITH_YAFFS_OOB)
+            return -EINVAL;
+
+        int pages;
+        pages = mtd->erasesize / mtd->writesize;
+        blocksize = (pages * mtd->oobsize) + mtd->erasesize;
+        if(*length % (mtd->writesize + mtd->oobsize)) {
+            printf ("Attempt to write incomplete page in yaffs mode\n");
+            return -EINVAL;
+        }
+    }
+    else
+#endif
+    {
+        blocksize = mtd->erasesize;
+    }
 
 	/*
 	 * nand_write() handles unaligned, partial page writes.
@@ -649,23 +665,55 @@
 			write_size = left_to_write;
 		else
 			write_size = blocksize - block_offset;
-
-		truncated_write_size = write_size;
+#ifdef CONFIG_CMD_NAND_YAFFS
+        if (flags & WITH_YAFFS_OOB)
+        {
+            int page, pages;
+            size_t pagesize = mtd->writesize;
+            size_t pagesize_oob = pagesize + mtd->oobsize;
+            struct mtd_oob_ops ops;
+
+            ops.len = pagesize;
+            ops.ooblen = mtd->oobsize;
+            ops.mode = MTD_OPS_RAW;       //这里要改为RAW
+            ops.ooboffs = 0;
+
+            pages = write_size / pagesize_oob;
+            for (page = 0; page < pages; page++)
+            {
+                WATCHDOG_RESET();
+
+                ops.datbuf = p_buffer;
+                ops.oobbuf = ops.datbuf + pagesize;
+
+                rval = mtd->_write_oob(mtd, offset, &ops);
+                if (rval != 0)
+                    break;
+
+                offset += pagesize;
+                p_buffer += pagesize_oob;
+            }
+        }
+        else
+#endif
+        {
+            truncated_write_size = write_size;
 #ifdef CONFIG_CMD_NAND_TRIMFFS
-		if (flags & WITH_DROP_FFS)
-			truncated_write_size = drop_ffs(mtd, p_buffer,
-					&write_size);
+            if (flags & WITH_DROP_FFS)
+                truncated_write_size = drop_ffs(mtd, p_buffer,
+                        &write_size);
 #endif
 
-		rval = nand_write(mtd, offset, &truncated_write_size,
-				p_buffer);
-
-		if ((flags & WITH_WR_VERIFY) && !rval)
-			rval = nand_verify(mtd, offset,
-				truncated_write_size, p_buffer);
+            rval = nand_write(mtd, offset, &truncated_write_size,
+                    p_buffer);
 
-		offset += write_size;
-		p_buffer += write_size;
+            if ((flags & WITH_WR_VERIFY) && !rval)
+                rval = nand_verify(mtd, offset,
+                    truncated_write_size, p_buffer);
+
+            offset += write_size;
+            p_buffer += write_size;
+        }
 
 		if (rval != 0) {
 			printf("NAND write to offset %llx failed %d\n",
diff -urN u-boot-2016.11/drivers/mtd/nand/s3c2440_nand.c u-boot-2016.11_SpaceYu/drivers/mtd/nand/s3c2440_nand.c
--- u-boot-2016.11/drivers/mtd/nand/s3c2440_nand.c	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-2016.11_SpaceYu/drivers/mtd/nand/s3c2440_nand.c	2018-03-21 19:29:58.488757569 +0800
@@ -0,0 +1,171 @@
+/*
+ * (C) Copyright 2006 OpenMoko, Inc.
+ * Author: Harald Welte <laforge@openmoko.org>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+
+#include <nand.h>
+#include <asm/arch/s3c24x0_cpu.h>
+#include <asm/io.h>
+
+#define S3C2440_NFCONT_EN          (1<<0)
+#define S3C2440_NFCONT_INITECC     (1<<4)
+#define S3C2440_NFCONT_nFCE        (1<<1)
+#define S3C2440_NFCONF_TACLS(x)    ((x)<<12)
+#define S3C2440_NFCONF_TWRPH0(x)   ((x)<<8)
+#define S3C2440_NFCONF_TWRPH1(x)   ((x)<<4)
+
+#define S3C2440_ADDR_NALE 0x0C
+#define S3C2440_ADDR_NCLE 0x08
+
+#ifdef CONFIG_NAND_SPL
+
+/* in the early stage of NAND flash booting, printf() is not available */
+#define printf(fmt, args...)
+
+static void nand_read_buf(struct mtd_info *mtd, u_char *buf, int len)
+{
+	int i;
+	struct nand_chip *this = mtd_to_nand(mtd);
+
+	for (i = 0; i < len; i++)
+		buf[i] = readb(this->IO_ADDR_R);
+}
+#endif
+
+static void s3c24x0_hwcontrol(struct mtd_info *mtd, int cmd, unsigned int ctrl)
+{
+	struct s3c24x0_nand *nand = s3c24x0_get_base_nand();
+
+	debug("hwcontrol(): 0x%02x 0x%02x\n", cmd, ctrl);
+
+	if (ctrl & NAND_CTRL_CHANGE) {
+        if(ctrl & NAND_NCE) {
+            writel(readl(&nand->nfcont) & ~S3C2440_NFCONT_nFCE, &nand->nfcont);
+        } else {
+            writel(readl(&nand->nfcont) | S3C2440_NFCONT_nFCE, &nand->nfcont);
+        }
+	}
+    if (ctrl & NAND_CLE)
+    {
+        writeb(cmd,&nand->nfcmd);
+    }
+    else if (ctrl & NAND_ALE)
+    {
+        writeb(cmd,&nand->nfaddr);
+    }
+}
+
+static int s3c24x0_dev_ready(struct mtd_info *mtd)
+{
+	struct s3c24x0_nand *nand = s3c24x0_get_base_nand();
+	debug("dev_ready\n");
+	return readl(&nand->nfstat) & 0x01;
+}
+
+#ifdef CONFIG_S3C2410_NAND_HWECC
+void s3c24x0_nand_enable_hwecc(struct mtd_info *mtd, int mode)
+{
+	struct s3c24x0_nand *nand = s3c24x0_get_base_nand();
+	debug("s3c24x0_nand_enable_hwecc(%p, %d)\n", mtd, mode);
+	writel(readl(&nand->nfconf) | S3C2410_NFCONF_INITECC, &nand->nfconf);
+}
+
+static int s3c24x0_nand_calculate_ecc(struct mtd_info *mtd, const u_char *dat,
+				      u_char *ecc_code)
+{
+	struct s3c24x0_nand *nand = s3c24x0_get_base_nand();
+	ecc_code[0] = readb(&nand->nfecc);
+	ecc_code[1] = readb(&nand->nfecc + 1);
+	ecc_code[2] = readb(&nand->nfecc + 2);
+	debug("s3c24x0_nand_calculate_hwecc(%p,): 0x%02x 0x%02x 0x%02x\n",
+	      mtd , ecc_code[0], ecc_code[1], ecc_code[2]);
+
+	return 0;
+}
+
+static int s3c24x0_nand_correct_data(struct mtd_info *mtd, u_char *dat,
+				     u_char *read_ecc, u_char *calc_ecc)
+{
+	if (read_ecc[0] == calc_ecc[0] &&
+	    read_ecc[1] == calc_ecc[1] &&
+	    read_ecc[2] == calc_ecc[2])
+		return 0;
+
+	printf("s3c24x0_nand_correct_data: not implemented\n");
+	return -EBADMSG;
+}
+#endif
+
+int board_nand_init(struct nand_chip *nand)
+{
+	u_int32_t cfg;
+	u_int8_t tacls, twrph0, twrph1;
+	struct s3c24x0_clock_power *clk_power = s3c24x0_get_base_clock_power();
+	struct s3c24x0_nand *nand_reg = s3c24x0_get_base_nand();
+
+	debug("board_nand_init()\n");
+
+	writel(readl(&clk_power->clkcon) | (1 << 4), &clk_power->clkcon);
+
+	/* initialize hardware */
+#if defined(CONFIG_S3C24XX_CUSTOM_NAND_TIMING)
+	tacls  = CONFIG_S3C24XX_TACLS;
+	twrph0 = CONFIG_S3C24XX_TWRPH0;
+	twrph1 =  CONFIG_S3C24XX_TWRPH1;
+#else
+	tacls = 0;
+	twrph0 = 1;
+	twrph1 = 0;
+#endif
+
+	cfg = 0;
+	cfg |= S3C2440_NFCONF_TACLS(tacls - 1);
+	cfg |= S3C2440_NFCONF_TWRPH0(twrph0 - 1);
+	cfg |= S3C2440_NFCONF_TWRPH1(twrph1 - 1);
+	writel(cfg, &nand_reg->nfconf);
+    
+   //enable NAND controller
+    cfg = S3C2440_NFCONT_EN | S3C2440_NFCONT_INITECC | S3C2440_NFCONT_nFCE;
+    writel(cfg, &nand_reg->nfcont);
+
+	/* initialize nand_chip data structure */
+	nand->IO_ADDR_R = (void *)&nand_reg->nfdata;
+	nand->IO_ADDR_W = (void *)&nand_reg->nfdata;
+
+	nand->select_chip = NULL;
+
+	/* read_buf and write_buf are default */
+	/* read_byte and write_byte are default */
+#ifdef CONFIG_NAND_SPL
+	nand->read_buf = nand_read_buf;
+#endif
+
+	/* hwcontrol always must be implemented */
+	nand->cmd_ctrl = s3c24x0_hwcontrol;
+
+	nand->dev_ready = s3c24x0_dev_ready;
+
+#ifdef CONFIG_S3C2410_NAND_HWECC
+	nand->ecc.hwctl = s3c24x0_nand_enable_hwecc;
+	nand->ecc.calculate = s3c24x0_nand_calculate_ecc;
+	nand->ecc.correct = s3c24x0_nand_correct_data;
+	nand->ecc.mode = NAND_ECC_NONE;
+	nand->ecc.size = CONFIG_SYS_NAND_ECCSIZE;
+	nand->ecc.bytes = CONFIG_SYS_NAND_ECCBYTES;
+	nand->ecc.strength = 1;
+#else
+	nand->ecc.mode = NAND_ECC_SOFT;
+#endif
+
+#ifdef CONFIG_S3C2410_NAND_BBT
+	nand->bbt_options |= NAND_BBT_USE_FLASH;
+#endif
+
+	debug("end of nand_init\n");
+
+	return 0;
+}
diff -urN u-boot-2016.11/drivers/net/dm9000x.c u-boot-2016.11_SpaceYu/drivers/net/dm9000x.c
--- u-boot-2016.11/drivers/net/dm9000x.c	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/drivers/net/dm9000x.c	2018-03-19 20:37:17.435291522 +0800
@@ -102,8 +102,8 @@
 
 /* function declaration ------------------------------------- */
 static int dm9000_probe(void);
-static u16 dm9000_phy_read(int);
-static void dm9000_phy_write(int, u16);
+/* static u16 dm9000_phy_read(int); */
+/* static void dm9000_phy_write(int, u16); */
 static u8 DM9000_ior(int);
 static void DM9000_iow(int reg, u8 value);
 
@@ -279,9 +279,9 @@
 
 /* Initialize dm9000 board
 */
-static int dm9000_init(struct eth_device *dev, bd_t *bd)
+int dm9000_init(struct eth_device *dev, bd_t *bd)
 {
-	int i, oft, lnk;
+	int i, oft;
 	u8 io_mode;
 	struct board_info *db = &dm9000_info;
 
@@ -341,8 +341,8 @@
 	/* Clear interrupt status */
 	DM9000_iow(DM9000_ISR, ISR_ROOS | ISR_ROS | ISR_PTS | ISR_PRS);
 
-	printf("MAC: %pM\n", dev->enetaddr);
-	if (!is_valid_ethaddr(dev->enetaddr)) {
+	printf("MAC: %pM\n", bd->bi_enetaddr);
+	if (!is_valid_ethaddr(bd->bi_enetaddr)) {
 		printf("WARNING: Bad MAC address (uninitialized EEPROM?)\n");
 	}
 
@@ -362,7 +362,7 @@
 	DM9000_iow(DM9000_RCR, RCR_DIS_LONG | RCR_DIS_CRC | RCR_RXEN);
 	/* Enable TX/RX interrupt mask */
 	DM9000_iow(DM9000_IMR, IMR_PAR);
-
+#if 0
 	i = 0;
 	while (!(dm9000_phy_read(1) & 0x20)) {	/* autonegation complete bit */
 		udelay(1000);
@@ -394,6 +394,7 @@
 		break;
 	}
 	printf("mode\n");
+#endif
 	return 0;
 }
 
@@ -444,6 +445,7 @@
 */
 static void dm9000_halt(struct eth_device *netdev)
 {
+#if 0
 	DM9000_DBG("%s\n", __func__);
 
 	/* RESET devie */
@@ -451,6 +453,7 @@
 	DM9000_iow(DM9000_GPR, 0x01);	/* Power-Down PHY */
 	DM9000_iow(DM9000_IMR, 0x80);	/* Disable all interrupt */
 	DM9000_iow(DM9000_RCR, 0x00);	/* Disable RX */
+#endif
 }
 
 /*
@@ -583,6 +586,7 @@
 /*
    Read a word from phyxcer
 */
+#if 0
 static u16
 dm9000_phy_read(int reg)
 {
@@ -618,7 +622,7 @@
 	DM9000_iow(DM9000_EPCR, 0x0);	/* Clear phyxcer write command */
 	DM9000_DBG("dm9000_phy_write(reg:0x%x, value:0x%x)\n", reg, value);
 }
-
+#endif
 int dm9000_initialize(bd_t *bis)
 {
 	struct eth_device *dev = &(dm9000_info.netdev);
diff -urN u-boot-2016.11/include/configs/smdk2440.h u-boot-2016.11_SpaceYu/include/configs/smdk2440.h
--- u-boot-2016.11/include/configs/smdk2440.h	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-2016.11_SpaceYu/include/configs/smdk2440.h	2018-03-21 16:26:25.502863995 +0800
@@ -0,0 +1,215 @@
+/*
+ * (C) Copyright 2002
+ * Sysgo Real-Time Solutions, GmbH <www.elinos.com>
+ * Marius Groeger <mgroeger@sysgo.de>
+ * Gary Jennejohn <garyj@denx.de>
+ * David Mueller <d.mueller@elsoft.ch>
+ *
+ * Configuation settings for the SAMSUNG SMDK2410 board.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+/*
+ * High Level Configuration Options
+ * (easy to change)
+ */
+#define CONFIG_S3C24X0		/* This is a SAMSUNG S3C24x0-type SoC */
+#define CONFIG_S3C2440		/* specifically a SAMSUNG S3C2410 SoC */
+#define CONFIG_SMDK2440		/* on a SAMSUNG SMDK2410 Board */
+
+#define CONFIG_SYS_TEXT_BASE	0x33F00000
+
+#define CONFIG_SYS_ARM_CACHE_WRITETHROUGH
+
+/* input clock of PLL (the SMDK2410 has 12MHz input clock) */
+#define CONFIG_SYS_CLK_FREQ	12000000
+
+#define CONFIG_CMDLINE_TAG	/* enable passing of ATAGs */
+#define CONFIG_SETUP_MEMORY_TAGS
+#define CONFIG_INITRD_TAG
+
+/*
+ * Hardware drivers
+ */
+#if 0
+#define CONFIG_CS8900		/* we have a CS8900 on-board */
+#define CONFIG_CS8900_BASE	0x19000300
+#define CONFIG_CS8900_BUS16	/* the Linux driver does accesses as shorts */
+# else
+#define CONFIG_DRIVER_DM9000
+#define CONFIG_DM9000_BASE  0x20000000
+#define DM9000_IO  CONFIG_DM9000_BASE
+#define DM9000_DATA (CONFIG_DM9000_BASE + 4)
+#endif
+
+/*
+ * select serial console configuration
+ */
+#define CONFIG_S3C24X0_SERIAL
+#define CONFIG_SERIAL1		1	/* we use SERIAL 1 on SMDK2410 */
+
+/************************************************************
+ * USB support (currently only works with D-cache off)
+ ************************************************************/
+#if  0
+#define CONFIG_USB_OHCI
+#define CONFIG_USB_OHCI_S3C24XX
+#define CONFIG_DOS_PARTITION
+#endif
+
+/************************************************************
+ * RTC
+ ************************************************************/
+#if 0
+#define CONFIG_RTC_S3C24X0
+#endif
+#define CONFIG_BAUDRATE		115200
+
+/*
+ * BOOTP options
+ */
+#define CONFIG_BOOTP_BOOTFILESIZE
+#define CONFIG_BOOTP_BOOTPATH
+#define CONFIG_BOOTP_GATEWAY
+#define CONFIG_BOOTP_HOSTNAME
+
+/*
+ * Command line configuration.
+ */
+#define CONFIG_CMD_BSP
+#if 0
+#define CONFIG_CMD_DATE
+#endif
+#define CONFIG_CMD_NAND
+#define CONFIG_CMD_REGINFO
+
+#define CONFIG_CMDLINE_EDITING
+
+#define CONFIG_BOOTARGS "console=ttySAC0,115200 root=/dev/mtdblock3"
+#define CONFIG_BOOTCOMMAND  "nand read 30000000 kernel; bootm 30000000"
+
+#define CONFIG_CMD_MTDPARTS
+#define CONFIG_MTD_DEVICE
+#define CONFIG_MTD_PARTITIONS
+#define MTDIDS_DEFAULT      "nand0=jz2440"
+#define MTDPARTS_DEFAULT    "mtdparts=jz2440:256k(u-boot),"\
+                            "128k(params),"\
+                            "4m(kernel),"\
+                            "-(rootfs)" 
+
+/* autoboot */
+#define CONFIG_BOOT_RETRY_TIME	-1
+#define CONFIG_RESET_TO_RETRY
+
+#define CONFIG_NETMASK		255.255.255.0
+#define CONFIG_IPADDR		192.168.0.17
+#define CONFIG_SERVERIP		192.168.0.25
+#define CONFIG_ETHADDR      08:00:3e:26:0a:5b
+
+#define CONFIG_CMD_NAND_YAFFS
+
+#if defined(CONFIG_CMD_KGDB)
+#define CONFIG_KGDB_BAUDRATE	115200	/* speed to run kgdb serial port */
+#endif
+
+/*
+ * Miscellaneous configurable options
+ */
+#define CONFIG_SYS_LONGHELP		/* undef to save memory */
+#define CONFIG_SYS_CBSIZE	256
+/* Print Buffer Size */
+#define CONFIG_SYS_PBSIZE	(CONFIG_SYS_CBSIZE + \
+				sizeof(CONFIG_SYS_PROMPT)+16)
+#define CONFIG_SYS_MAXARGS	16
+#define CONFIG_SYS_BARGSIZE	CONFIG_SYS_CBSIZE
+
+#define CONFIG_SYS_MEMTEST_START	0x30000000	/* memtest works on */
+#define CONFIG_SYS_MEMTEST_END		0x33F00000	/* 63 MB in DRAM */
+
+#define CONFIG_SYS_LOAD_ADDR		0x30800000
+
+/* support additional compression methods */
+#if 0
+#define CONFIG_BZIP2
+#define CONFIG_LZO
+#define CONFIG_LZMA
+#endif
+/*-----------------------------------------------------------------------
+ * Physical Memory Map
+ */
+#define CONFIG_NR_DRAM_BANKS	1          /* we have 1 bank of DRAM */
+#define PHYS_SDRAM_1		0x30000000 /* SDRAM Bank #1 */
+#define PHYS_SDRAM_1_SIZE	0x04000000 /* 64 MB */
+
+#define PHYS_FLASH_1		0x00000000 /* Flash Bank #0 */
+
+#define CONFIG_SYS_FLASH_BASE	PHYS_FLASH_1
+
+/*-----------------------------------------------------------------------
+ * FLASH and environment organization
+ */
+
+#define CONFIG_SYS_FLASH_CFI
+#define CONFIG_FLASH_CFI_DRIVER
+#define CONFIG_FLASH_CFI_LEGACY
+#define CONFIG_SYS_FLASH_LEGACY_512Kx16
+#define CONFIG_FLASH_SHOW_PROGRESS	45
+
+#define CONFIG_SYS_MAX_FLASH_BANKS	1
+#define CONFIG_SYS_FLASH_BANKS_LIST     { CONFIG_SYS_FLASH_BASE }
+#define CONFIG_SYS_MAX_FLASH_SECT	(19)
+
+#if 0
+#define CONFIG_ENV_ADDR			(CONFIG_SYS_FLASH_BASE + 0x070000)
+#define CONFIG_ENV_IS_IN_FLASH
+#define CONFIG_ENV_SIZE			0x10000
+/* allow to overwrite serial and ethaddr */
+#define CONFIG_ENV_OVERWRITE
+#else
+#define CONFIG_ENV_IS_IN_NAND
+#define CONFIG_ENV_OFFSET    0x00040000
+#define CONFIG_ENV_SIZE      0x00020000
+#endif
+/*
+ * Size of malloc() pool
+ * BZIP2 / LZO / LZMA need a lot of RAM
+ */
+#define CONFIG_SYS_MALLOC_LEN	(4 * 1024 * 1024)
+
+#define CONFIG_SYS_MONITOR_LEN	(448 * 1024)
+#define CONFIG_SYS_MONITOR_BASE	CONFIG_SYS_FLASH_BASE
+
+/*
+ * NAND configuration
+ */
+#ifdef CONFIG_CMD_NAND
+#define CONFIG_NAND_S3C2440
+#define CONFIG_SYS_S3C2440_NAND_HWECC
+#define CONFIG_SYS_MAX_NAND_DEVICE	1
+#define CONFIG_SYS_NAND_BASE		0x4E000000
+#endif
+
+/*
+ * File system
+ */
+#if 0
+#define CONFIG_CMD_UBIFS
+#define CONFIG_CMD_MTDPARTS
+#define CONFIG_MTD_DEVICE
+#define CONFIG_MTD_PARTITIONS
+#define CONFIG_YAFFS2
+#define CONFIG_RBTREE
+#endif
+
+/* additions for new relocation code, must be added to all boards */
+#define CONFIG_SYS_SDRAM_BASE	PHYS_SDRAM_1
+#define CONFIG_SYS_INIT_SP_ADDR	(CONFIG_SYS_SDRAM_BASE + 0x1000 - \
+				GENERATED_GBL_DATA_SIZE)
+
+#define CONFIG_BOARD_EARLY_INIT_F
+
+#endif /* __CONFIG_H */
diff -urN u-boot-2016.11/include/env_default.h u-boot-2016.11_SpaceYu/include/env_default.h
--- u-boot-2016.11/include/env_default.h	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/include/env_default.h	2018-03-19 20:40:47.084911602 +0800
@@ -58,6 +58,9 @@
 #ifdef	CONFIG_SERVERIP
 	"serverip="	__stringify(CONFIG_SERVERIP)	"\0"
 #endif
+#ifdef	CONFIG_ETHADDR
+	"ethaddr="	__stringify(CONFIG_ETHADDR)	"\0"
+#endif
 #ifdef	CONFIG_SYS_AUTOLOAD
 	"autoload="	CONFIG_SYS_AUTOLOAD		"\0"
 #endif
diff -urN u-boot-2016.11/include/nand.h u-boot-2016.11_SpaceYu/include/nand.h
--- u-boot-2016.11/include/nand.h	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/include/nand.h	2018-03-19 21:57:01.834919239 +0800
@@ -27,6 +27,11 @@
 #endif
 #endif
 
+#ifdef CONFIG_CMD_NAND_YAFFS
+#define WITH_YAFFS_OOB    (1 << 0)
+#define WITH_DROP_FFS   (1 << 0)
+#endif
+
 extern void nand_init(void);
 
 #include <linux/compat.h>
diff -urN u-boot-2016.11/Kconfig u-boot-2016.11_SpaceYu/Kconfig
--- u-boot-2016.11/Kconfig	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/Kconfig	2018-03-19 22:07:06.991865892 +0800
@@ -26,7 +26,7 @@
 
 config LOCALVERSION_AUTO
 	bool "Automatically append version information to the version string"
-	default y
+	default n
 	help
 	  This will try to automatically determine if the current tree is a
 	  release tree by looking for Git tags that belong to the current
diff -urN u-boot-2016.11/list u-boot-2016.11_SpaceYu/list
--- u-boot-2016.11/list	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-2016.11_SpaceYu/list	2018-03-19 21:22:19.235701001 +0800
@@ -0,0 +1,255 @@
+configs/colibri_t20_defconfig:33:CONFIG_CMD_UBI=y
+configs/km_kirkwood_128m16_defconfig:21:CONFIG_CMD_UBI=y
+configs/kmtegr1_defconfig:18:CONFIG_CMD_UBI=y
+configs/at91sam9x5ek_spiflash_defconfig:30:CONFIG_CMD_UBI=y
+configs/igep0020_defconfig:34:CONFIG_CMD_UBI=y
+configs/nas220_defconfig:19:CONFIG_CMD_UBI=y
+configs/m28evk_defconfig:34:CONFIG_CMD_UBI=y
+configs/vf610twr_nand_defconfig:18:CONFIG_CMD_UBI=y
+configs/goflexhome_defconfig:19:CONFIG_CMD_UBI=y
+configs/socfpga_socrates_defconfig:39:CONFIG_CMD_UBI=y
+configs/km_kirkwood_defconfig:21:CONFIG_CMD_UBI=y
+configs/iconnect_defconfig:16:CONFIG_CMD_UBI=y
+configs/mcx_defconfig:29:CONFIG_CMD_UBI=y
+configs/sama5d3_xplained_mmc_defconfig:31:CONFIG_CMD_UBI=y
+configs/socfpga_cyclone5_defconfig:38:CONFIG_CMD_UBI=y
+configs/a3m071_defconfig:25:CONFIG_CMD_UBI=y
+configs/x600_defconfig:28:CONFIG_CMD_UBI=y
+configs/eco5pk_defconfig:22:CONFIG_CMD_UBI=y
+configs/titanium_defconfig:26:CONFIG_CMD_UBI=y
+configs/vct_platinumavc_onenand_small_defconfig:23:CONFIG_CMD_UBI=y
+configs/dns325_defconfig:18:CONFIG_CMD_UBI=y
+configs/draco_defconfig:43:CONFIG_CMD_UBI=y
+configs/kmtepr2_defconfig:18:CONFIG_CMD_UBI=y
+configs/aristainetos2b_defconfig:29:CONFIG_CMD_UBI=y
+configs/smdk2440_defconfig:15:# CONFIG_CMD_UBI=y
+configs/tricorder_flash_defconfig:20:CONFIG_CMD_UBI=y
+configs/igep0030_defconfig:34:CONFIG_CMD_UBI=y
+configs/k2e_evm_defconfig:36:CONFIG_CMD_UBI=y
+configs/mgcoge_defconfig:18:CONFIG_CMD_UBI=y
+configs/openrd_ultimate_defconfig:18:CONFIG_CMD_UBI=y
+configs/pxm2_defconfig:48:CONFIG_CMD_UBI=y
+configs/kmopti2_defconfig:18:CONFIG_CMD_UBI=y
+configs/ipam390_defconfig:23:CONFIG_CMD_UBI=y
+configs/omapl138_lcdk_defconfig:24:CONFIG_CMD_UBI=y
+configs/km_kirkwood_pci_defconfig:21:CONFIG_CMD_UBI=y
+configs/aristainetos_defconfig:29:CONFIG_CMD_UBI=y
+configs/twister_defconfig:24:CONFIG_CMD_UBI=y
+configs/dockstar_defconfig:17:CONFIG_CMD_UBI=y
+configs/m53evk_defconfig:31:CONFIG_CMD_UBI=y
+configs/ethernut5_defconfig:28:CONFIG_CMD_UBI=y
+configs/tuxx1_defconfig:18:CONFIG_CMD_UBI=y
+configs/omap3_logic_defconfig:32:CONFIG_CMD_UBI=y
+configs/am3517_evm_defconfig:33:CONFIG_CMD_UBI=y
+configs/tuge1_defconfig:18:CONFIG_CMD_UBI=y
+configs/k2hk_evm_defconfig:36:CONFIG_CMD_UBI=y
+configs/kmcoge4_defconfig:23:CONFIG_CMD_UBI=y
+configs/ds414_defconfig:29:CONFIG_CMD_UBI=y
+configs/apf27_defconfig:23:CONFIG_CMD_UBI=y
+configs/mx28evk_auart_console_defconfig:32:CONFIG_CMD_UBI=y
+configs/microblaze-generic_defconfig:30:CONFIG_CMD_UBI=y
+configs/mx28evk_spi_defconfig:32:CONFIG_CMD_UBI=y
+configs/guruplug_defconfig:20:CONFIG_CMD_UBI=y
+configs/sama5d3_xplained_nandflash_defconfig:29:CONFIG_CMD_UBI=y
+configs/socfpga_vining_fpga_defconfig:40:CONFIG_CMD_UBI=y
+configs/gwventana_defconfig:46:CONFIG_CMD_UBI=y
+configs/tricorder_defconfig:20:CONFIG_CMD_UBI=y
+configs/omap3_overo_defconfig:33:CONFIG_CMD_UBI=y
+configs/ids8313_defconfig:23:CONFIG_CMD_UBI=y
+configs/mt_ventoux_defconfig:26:CONFIG_CMD_UBI=y
+configs/bk4r1_defconfig:18:CONFIG_CMD_UBI=y
+configs/kmvect1_defconfig:18:CONFIG_CMD_UBI=y
+configs/kmsupx5_defconfig:18:CONFIG_CMD_UBI=y
+configs/rut_defconfig:48:CONFIG_CMD_UBI=y
+configs/vf610twr_defconfig:18:CONFIG_CMD_UBI=y
+configs/platinum_titanium_defconfig:38:CONFIG_CMD_UBI=y
+configs/mx28evk_defconfig:33:CONFIG_CMD_UBI=y
+configs/rastaban_defconfig:43:CONFIG_CMD_UBI=y
+configs/sheevaplug_defconfig:21:CONFIG_CMD_UBI=y
+configs/platinum_picon_defconfig:38:CONFIG_CMD_UBI=y
+configs/kmsugp1_defconfig:21:CONFIG_CMD_UBI=y
+configs/k2l_evm_defconfig:36:CONFIG_CMD_UBI=y
+configs/igep0032_defconfig:34:CONFIG_CMD_UBI=y
+configs/socfpga_is1_defconfig:34:CONFIG_CMD_UBI=y
+configs/suvd3_defconfig:18:CONFIG_CMD_UBI=y
+configs/kmlion1_defconfig:23:CONFIG_CMD_UBI=y
+configs/vct_platinumavc_onenand_defconfig:15:CONFIG_CMD_UBI=y
+configs/vct_premium_onenand_small_defconfig:23:CONFIG_CMD_UBI=y
+configs/am335x_baltos_defconfig:46:CONFIG_CMD_UBI=y
+configs/kmeter1_defconfig:18:CONFIG_CMD_UBI=y
+configs/aristainetos2_defconfig:29:CONFIG_CMD_UBI=y
+configs/socfpga_arria5_defconfig:38:CONFIG_CMD_UBI=y
+configs/portl2_defconfig:21:CONFIG_CMD_UBI=y
+configs/kmnusa_defconfig:21:CONFIG_CMD_UBI=y
+configs/colibri_imx7_defconfig:37:CONFIG_CMD_UBI=y
+configs/openrd_base_defconfig:18:CONFIG_CMD_UBI=y
+configs/colibri_vf_defconfig:26:CONFIG_CMD_UBI=y
+configs/pcm052_defconfig:17:CONFIG_CMD_UBI=y
+configs/nsa310s_defconfig:19:CONFIG_CMD_UBI=y
+configs/mgcoge3un_defconfig:21:CONFIG_CMD_UBI=y
+configs/vct_platinum_onenand_small_defconfig:23:CONFIG_CMD_UBI=y
+configs/ea20_defconfig:26:CONFIG_CMD_UBI=y
+configs/vct_platinum_onenand_defconfig:17:CONFIG_CMD_UBI=y
+configs/k2g_evm_defconfig:36:CONFIG_CMD_UBI=y
+configs/socfpga_sockit_defconfig:38:CONFIG_CMD_UBI=y
+configs/at91sam9x5ek_dataflash_defconfig:23:CONFIG_CMD_UBI=y
+configs/socfpga_mcvevk_defconfig:38:CONFIG_CMD_UBI=y
+configs/PLU405_defconfig:18:CONFIG_CMD_UBI=y
+configs/vct_premium_onenand_defconfig:17:CONFIG_CMD_UBI=y
+configs/pcm058_defconfig:38:CONFIG_CMD_UBI=y
+configs/VCMA9_defconfig:14:CONFIG_CMD_UBI=y
+configs/mx28evk_nand_defconfig:32:CONFIG_CMD_UBI=y
+configs/at91sam9x5ek_nandflash_defconfig:29:CONFIG_CMD_UBI=y
+configs/socfpga_sr1500_defconfig:38:CONFIG_CMD_UBI=y
+configs/omap3_pandora_defconfig:31:CONFIG_CMD_UBI=y
+configs/at91sam9x5ek_mmc_defconfig:23:CONFIG_CMD_UBI=y
+configs/kmcoge5ne_defconfig:18:CONFIG_CMD_UBI=y
+configs/apx4devkit_defconfig:24:CONFIG_CMD_UBI=y
+configs/ib62x0_defconfig:20:CONFIG_CMD_UBI=y
+configs/etamin_defconfig:43:CONFIG_CMD_UBI=y
+configs/thuban_defconfig:43:CONFIG_CMD_UBI=y
+configs/mgcoge3ne_defconfig:18:CONFIG_CMD_UBI=y
+configs/a4m2k_defconfig:26:CONFIG_CMD_UBI=y
+configs/kmcoge5un_defconfig:21:CONFIG_CMD_UBI=y
+configs/openrd_client_defconfig:18:CONFIG_CMD_UBI=y
+configs/socfpga_de0_nano_soc_defconfig:38:CONFIG_CMD_UBI=y
+configs/pogo_e02_defconfig:17:CONFIG_CMD_UBI=y
+configs/kmsuv31_defconfig:21:CONFIG_CMD_UBI=y
+Binary file cscope/cscope.in.out matches
+cscope/cscope.out:291282:CONFIG_CMD_UBIFS
+cscope/cscope.out:293090:CONFIG_CMD_UBIFS
+cscope/cscope.out:423278:CONFIG_CMD_UBIFS
+cscope/cscope.out:445994:CONFIG_CMD_UBIFS
+cscope/cscope.out:2494734:CONFIG_CMD_UBIFS
+cscope/cscope.out:2756056:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2756328:CONFIG_CMD_UBIFS
+cscope/cscope.out:2779792:CONFIG_CMD_UBI
+cscope/cscope.out:2890734:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2891730:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2901258:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2905896:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2906922:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2909120:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2917324:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2919854:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2951260:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2952400:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2952904:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2961688:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2969124:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2972260:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2978058:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2987876:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2994004:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:2995992:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3006852:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3047242:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3048016:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3051962:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3055046:CONFIG_CMD_UBIFS
+cscope/cscope.out:3055084:CONFIG_CMD_UBIFS
+cscope/cscope.out:3055102:CONFIG_CMD_UBIFS
+cscope/cscope.out:3055114:CONFIG_CMD_UBI
+cscope/cscope.out:3062284:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3064430:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3075530:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3077638:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3084766:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3085254:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3085726:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3087582:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3097298:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3098126:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3101890:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3105842:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3117502:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3132632:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3134682:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3135224:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3138976:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3140408:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3154012:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3163090:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3164664:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3167978:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3177876:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3184622:	#CONFIG_CMD_UBIFS
+cscope/cscope.out:3261252:CONFIG_CMD_UBI
+cscope/cscope.out:3314304:	#CONFIG_CMD_UBI
+Binary file cscope/cscope.out matches
+disk/part.c:430:#ifdef CONFIG_CMD_UBIFS
+fs/fs.c:151:#ifdef CONFIG_CMD_UBIFS
+fs/Makefile:22:obj-$(CONFIG_CMD_UBIFS) += ubifs/
+include/configs/nas220.h:113:#define CONFIG_CMD_UBIFS
+include/configs/pcm052.h:45:#define CONFIG_CMD_UBIFS
+include/configs/omapl138_lcdk.h:226:#define CONFIG_CMD_UBIFS
+include/configs/dockstar.h:85:#define CONFIG_CMD_UBIFS
+include/configs/colibri_imx7.h:185:#define CONFIG_CMD_UBIFS	/* increases size by almost 60 KB */
+include/configs/smdk2410.h:166:#define CONFIG_CMD_UBIFS
+include/configs/siemens-am33x-common.h:270:#define CONFIG_CMD_UBIFS
+include/configs/microblaze-generic.h:180:# undef CONFIG_CMD_UBIFS
+include/configs/microblaze-generic.h:194:# undef CONFIG_CMD_UBIFS
+include/configs/microblaze-generic.h:202:#if defined(CONFIG_CMD_UBIFS)
+include/configs/microblaze-generic.h:206:#if defined(CONFIG_CMD_UBI)
+include/configs/mv-common.h:138:#define CONFIG_CMD_UBIFS
+include/configs/mcx.h:106:#define CONFIG_CMD_UBIFS
+include/configs/ipam390.h:268:#define CONFIG_CMD_UBIFS
+include/configs/apf27.h:66:#define CONFIG_CMD_UBIFS
+include/configs/m53evk.h:115:#define CONFIG_CMD_UBIFS
+include/configs/ethernut5.h:98:#define CONFIG_CMD_UBIFS
+include/configs/gw_ventana.h:107:#define CONFIG_CMD_UBIFS
+include/configs/ea20.h:157:#define CONFIG_CMD_UBIFS
+include/configs/am3517_evm.h:140:#define CONFIG_CMD_UBIFS		/* Read-only UBI volume operations */
+include/configs/am3517_evm.h:141:#define CONFIG_RBTREE			/* required by CONFIG_CMD_UBI */
+include/configs/am3517_evm.h:142:#define CONFIG_LZO			/* required by CONFIG_CMD_UBIFS */
+include/configs/aristainetos-common.h:226:#define CONFIG_CMD_UBIFS
+include/configs/pogo_e02.h:84:#define CONFIG_CMD_UBIFS
+include/configs/colibri_vf.h:71:#define CONFIG_CMD_UBIFS	/* increases size by almost 60 KB */
+include/configs/tam3517-common.h:247:#define CONFIG_CMD_UBIFS
+include/configs/pcm058.h:83:#define CONFIG_CMD_UBIFS
+include/configs/a3m071.h:76:#define CONFIG_CMD_UBIFS
+include/configs/m28evk.h:47:#define CONFIG_CMD_UBIFS
+include/configs/omap3_pandora.h:65:#define CONFIG_CMD_UBIFS	/* Read-only UBI volume operations */
+include/configs/omap3_pandora.h:67:#define CONFIG_RBTREE		/* required by CONFIG_CMD_UBI */
+include/configs/omap3_pandora.h:68:#define CONFIG_LZO		/* required by CONFIG_CMD_UBIFS */
+include/configs/apx4devkit.h:59:#define CONFIG_CMD_UBIFS
+include/configs/x600.h:118:#define CONFIG_CMD_UBIFS
+include/configs/VCMA9.h:190:#define CONFIG_CMD_UBIFS
+include/configs/omap3_logic.h:92:#define CONFIG_CMD_UBIFS		/* Read-only UBI volume operations */
+include/configs/omap3_logic.h:93:#define CONFIG_RBTREE			/* required by CONFIG_CMD_UBI */
+include/configs/omap3_logic.h:94:#define CONFIG_LZO			/* required by CONFIG_CMD_UBIFS */
+include/configs/at91sam9x5ek.h:109:#define CONFIG_CMD_UBIFS
+include/configs/vf610twr.h:50:#define CONFIG_CMD_UBIFS
+include/configs/colibri_t20.h:76:#define CONFIG_CMD_UBIFS	/* increases size by almost 60 KB */
+include/configs/smdk2440.h:184:#define CONFIG_CMD_UBIFS
+include/configs/socfpga_common.h:295:#define CONFIG_CMD_UBIFS
+include/configs/da850evm.h:301:#define CONFIG_CMD_UBIFS
+include/configs/baltos.h:51:#define CONFIG_CMD_UBIFS
+include/configs/iconnect.h:93:#define CONFIG_CMD_UBIFS
+include/configs/socfpga_vining_fpga.h:195:#define CONFIG_CMD_UBIFS
+include/configs/platinum.h:26:#define CONFIG_CMD_UBIFS
+include/configs/ids8313.h:536:#define CONFIG_CMD_UBIFS
+include/configs/ti_armv7_keystone2.h:206:#define CONFIG_CMD_UBIFS
+include/configs/mx28evk.h:70:#define CONFIG_CMD_UBIFS
+include/configs/M54418TWR.h:345:#ifdef CONFIG_CMD_UBI
+include/configs/omap3_overo.h:58:#define CONFIG_CMD_UBIFS	/* Read-only UBI volume operations */
+include/configs/omap3_overo.h:60:#define CONFIG_RBTREE		/* required by CONFIG_CMD_UBI */
+include/configs/omap3_overo.h:61:#define CONFIG_LZO		/* required by CONFIG_CMD_UBIFS */
+include/configs/tricorder.h:143:#define CONFIG_CMD_UBIFS		/* UBIFS commands */
+include/configs/titanium.h:200:#define CONFIG_CMD_UBIFS
+include/configs/sama5d3_xplained.h:70:#define CONFIG_CMD_UBIFS
+include/configs/nokia_rx51.h:131:#define CONFIG_CMD_UBIFS		/* UBIFS Support */
+include/config/tristate.conf:5:CONFIG_CMD_UBI=Y
+include/config/auto.conf:64:CONFIG_CMD_UBI=y
+include/config_distro_bootcmd.h:75:#ifdef CONFIG_CMD_UBIFS
+include/config_distro_bootcmd.h:88:	BOOT_TARGET_DEVICES_references_UBIFS_without_CONFIG_CMD_UBIFS
+include/config_distro_bootcmd.h:90:	BOOT_TARGET_DEVICES_references_UBIFS_without_CONFIG_CMD_UBIFS
+include/generated/autoconf.h:66:#define CONFIG_CMD_UBI 1
+include/config_cmd_all.h:51:#define CONFIG_CMD_UBIFS	/* UBIFS Support		*/
+include/environment.h:101:# ifndef CONFIG_CMD_UBI
+include/environment.h:102:#  error "Need to define CONFIG_CMD_UBI when using CONFIG_ENV_IS_IN_UBI"
+Makefile:646:libs-$(CONFIG_CMD_UBI) += drivers/mtd/ubi/
+README:3170:		CONFIG_CMD_UBI
+README:3245:		CONFIG_CMD_UBIFS
+scripts/config_whitelist.txt:648:CONFIG_CMD_UBIFS
+u-boot.cfg:27:#define CONFIG_CMD_UBI 1
diff -urN u-boot-2016.11/Makefile u-boot-2016.11_SpaceYu/Makefile
--- u-boot-2016.11/Makefile	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/Makefile	2018-03-18 20:19:24.605707411 +0800
@@ -246,6 +246,9 @@
 CROSS_COMPILE ?=
 endif
 
+ARCH = arm
+CROSS_COMPILE = arm-linux-
+
 KCONFIG_CONFIG	?= .config
 export KCONFIG_CONFIG
 
@@ -784,6 +787,7 @@
 endif
 
 LDFLAGS_u-boot += $(LDFLAGS_FINAL)
+LDFLAGS_u-boot += $(call ld-option, --no-dynamic-linker)
 ifneq ($(CONFIG_SYS_TEXT_BASE),)
 LDFLAGS_u-boot += -Ttext $(CONFIG_SYS_TEXT_BASE)
 endif
diff -urN u-boot-2016.11/scripts/config_whitelist.txt u-boot-2016.11_SpaceYu/scripts/config_whitelist.txt
--- u-boot-2016.11/scripts/config_whitelist.txt	2016-11-15 00:27:11.000000000 +0800
+++ u-boot-2016.11_SpaceYu/scripts/config_whitelist.txt	2018-03-19 22:02:27.315910411 +0800
@@ -166,6 +166,7 @@
 CONFIG_ARCH_S3C2440
 CONFIG_ARCH_SHARK
 CONFIG_ARCH_SMDK2410
+CONFIG_ARCH_SMDK2440
 CONFIG_ARCH_TEGRA
 CONFIG_ARCH_USE_BUILTIN_BSWAP
 CONFIG_ARCH_VERSATILE_PB
@@ -611,6 +612,7 @@
 CONFIG_CMD_NAND_LOCK_UNLOCK
 CONFIG_CMD_NAND_TORTURE
 CONFIG_CMD_NAND_TRIMFFS
+CONFIG_CMD_NAND_YAFFS
 CONFIG_CMD_ONENAND
 CONFIG_CMD_OTP
 CONFIG_CMD_PART
@@ -2710,6 +2712,7 @@
 CONFIG_MACH_QSD8X72_FFA
 CONFIG_MACH_QSD8X72_SURF
 CONFIG_MACH_QT2410
+CONFIG_MACH_QT2440
 CONFIG_MACH_QUAD_SALSA
 CONFIG_MACH_QUICKSTEP
 CONFIG_MACH_R1801E
@@ -3312,6 +3315,7 @@
 CONFIG_NAND_OMAP_GPMC_WSCFG
 CONFIG_NAND_PLAT
 CONFIG_NAND_S3C2410
+CONFIG_NAND_S3C2440
 CONFIG_NAND_SECBOOT
 CONFIG_NAND_SPL
 CONFIG_NAND_U_BOOT
@@ -3876,6 +3880,7 @@
 CONFIG_RX_DESCR_NUM
 CONFIG_S32V234
 CONFIG_S3C2400
+CONFIG_S3C2440
 CONFIG_S3C2410
 CONFIG_S3C2410_NAND_BBT
 CONFIG_S3C2410_NAND_HWECC
@@ -4107,6 +4112,7 @@
 CONFIG_SMC_USE_32_BIT
 CONFIG_SMC_USE_IOFUNCS
 CONFIG_SMDK2410
+CONFIG_SMDK2440
 CONFIG_SMDK5420
 CONFIG_SMDKC100
 CONFIG_SMDKV310
@@ -7395,6 +7401,7 @@
 CONFIG_SYS_RV3029_TCR
 CONFIG_SYS_RX_ETH_BUFFER
 CONFIG_SYS_S3C2410_NAND_HWECC
+CONFIG_SYS_S3C2440_NAND_HWECC
 CONFIG_SYS_SATA
 CONFIG_SYS_SATA1
 CONFIG_SYS_SATA1_FLAGS
diff -urN u-boot-2016.11/tex u-boot-2016.11_SpaceYu/tex
--- u-boot-2016.11/tex	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-2016.11_SpaceYu/tex	2018-03-19 13:35:50.040094135 +0800
@@ -0,0 +1,48 @@
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/gpio.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/memory.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/sections.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/pl310.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/processor.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/io.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/armv7.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/unified.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/assembler.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/spl.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/global_data.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/hardware.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/cache.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/config.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/bootm.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/omap_sec_common.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/ehci-omap.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/unaligned.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/emif.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/setup.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/omap_musb.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/barriers.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/dma-mapping.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/gic.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/posix_types.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/secure.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/omap_mmc.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/omap_gpio.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/linkage.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/davinci_rtc.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/mach-types.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/psci.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/ptrace.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/armv7m.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/spin_table.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/setjmp.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/types.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/u-boot-arm.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/string.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/system.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/bitops.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/atomic.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/byteorder.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/utils.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/macro.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/u-boot.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/fsl_secure_boot.h
+/home/yjh/WorkSpace/u-boot-2016.11/arch/arm/include/asm/omap_common.h
diff -urN u-boot-2016.11/txt u-boot-2016.11_SpaceYu/txt
--- u-boot-2016.11/txt	1970-01-01 08:00:00.000000000 +0800
+++ u-boot-2016.11_SpaceYu/txt	2018-03-19 12:46:38.117580688 +0800
@@ -0,0 +1,247 @@
+./api
+./arch
+./arch/arm
+./arch/arm/cpu
+./arch/arm/cpu/arm920t/s3c24x0
+./arch/arm/dts
+./arch/arm/dts/include
+./arch/arm/imx-common
+./arch/arm/include
+./arch/arm/include/asm
+./arch/arm/include/asm/arch-s3c24x0
+./arch/arm/include/debug
+./arch/arm/lib
+./arch/arm/thumb1
+./arch/arm/thumb1/include
+./arch/arm/thumb1/include/asm
+./arch/arm/thumb1/include/asm/proc-armv
+./board
+./board/samsung
+./board/samsung/smdk2440
+./cmd
+./cmd/fastboot
+./common
+./common/eeprom
+./common/init
+./common/spl
+./configs
+./disk
+./drivers
+./drivers/adc
+./drivers/bios_emulator
+./drivers/bios_emulator/include
+./drivers/bios_emulator/include/x86emu
+./drivers/bios_emulator/x86emu
+./drivers/block
+./drivers/bootcount
+./drivers/clk
+./drivers/clk/at91
+./drivers/clk/exynos
+./drivers/clk/rockchip
+./drivers/clk/tegra
+./drivers/clk/uniphier
+./drivers/core
+./drivers/cpu
+./drivers/crypto
+./drivers/crypto/fsl
+./drivers/crypto/rsa_mod_exp
+./drivers/ddr
+./drivers/ddr/altera
+./drivers/ddr/fsl
+./drivers/ddr/marvell
+./drivers/ddr/marvell/a38x
+./drivers/ddr/marvell/axp
+./drivers/ddr/microchip
+./drivers/demo
+./drivers/dfu
+./drivers/dma
+./drivers/fpga
+./drivers/gpio
+./drivers/hwmon
+./drivers/i2c
+./drivers/i2c/muxes
+./drivers/input
+./drivers/led
+./drivers/mailbox
+./drivers/memory
+./drivers/misc
+./drivers/mmc
+./drivers/mtd
+./drivers/mtd/nand
+./drivers/mtd/onenand
+./drivers/mtd/spi
+./drivers/mtd/ubi
+./drivers/mtd/ubispl
+./drivers/net
+./drivers/net/fm
+./drivers/net/fsl-mc
+./drivers/net/fsl-mc/dpio
+./drivers/net/ldpaa_eth
+./drivers/net/phy
+./drivers/pch
+./drivers/pci
+./drivers/pcmcia
+./drivers/phy
+./drivers/phy/marvell
+./drivers/pinctrl
+./drivers/pinctrl/ath79
+./drivers/pinctrl/exynos
+./drivers/pinctrl/meson
+./drivers/pinctrl/nxp
+./drivers/pinctrl/rockchip
+./drivers/pinctrl/uniphier
+./drivers/power
+./drivers/power/battery
+./drivers/power/domain
+./drivers/power/fuel_gauge
+./drivers/power/mfd
+./drivers/power/pmic
+./drivers/power/regulator
+./drivers/pwm
+./drivers/qe
+./drivers/ram
+./drivers/remoteproc
+./drivers/reset
+./drivers/rtc
+./drivers/serial
+./drivers/soc
+./drivers/soc/keystone
+./drivers/sound
+./drivers/spi
+./drivers/spmi
+./drivers/sysreset
+./drivers/thermal
+./drivers/timer
+./drivers/tpm
+./drivers/twserial
+./drivers/usb
+./drivers/usb/common
+./drivers/usb/dwc3
+./drivers/usb/emul
+./drivers/usb/eth
+./drivers/usb/gadget
+./drivers/usb/gadget/udc
+./drivers/usb/host
+./drivers/usb/musb
+./drivers/usb/musb-new
+./drivers/usb/phy
+./drivers/usb/ulpi
+./drivers/video
+./drivers/video/bridge
+./drivers/video/exynos
+./drivers/video/fonts
+./drivers/video/rockchip
+./drivers/video/tegra124
+./drivers/watchdog
+./dts
+./examples
+./examples/api
+./examples/standalone
+./fs
+./fs/cbfs
+./fs/cramfs
+./fs/ext4
+./fs/fat
+./fs/jffs2
+./fs/reiserfs
+./fs/sandbox
+./fs/ubifs
+./fs/yaffs2
+./fs/zfs
+./include
+./include/andestech
+./include/asm-generic
+./include/asm-generic/bitops
+./include/bedbug
+./include/cavium
+./include/configs
+./include/configs/km
+./include/configs/manroland
+./include/cramfs
+./include/dm
+./include/dm/platform_data
+./include/dt-bindings
+./include/dt-bindings/clock
+./include/dt-bindings/comphy
+./include/dt-bindings/dma
+./include/dt-bindings/gpio
+./include/dt-bindings/input
+./include/dt-bindings/interrupt-controller
+./include/dt-bindings/interrupt-router
+./include/dt-bindings/mailbox
+./include/dt-bindings/memory
+./include/dt-bindings/mrc
+./include/dt-bindings/net
+./include/dt-bindings/phy
+./include/dt-bindings/pinctrl
+./include/dt-bindings/pmic
+./include/dt-bindings/power
+./include/dt-bindings/power-domain
+./include/dt-bindings/pwm
+./include/dt-bindings/regulator
+./include/dt-bindings/reset
+./include/dt-bindings/sound
+./include/dt-bindings/thermal
+./include/dt-bindings/video
+./include/faraday
+./include/fsl-mc
+./include/grlib
+./include/jffs2
+./include/linux
+./include/linux/byteorder
+./include/linux/mtd
+./include/linux/unaligned
+./include/linux/usb
+./include/lzma
+./include/mtd
+./include/net
+./include/pcmcia
+./include/power
+./include/samsung
+./include/spmi
+./include/synopsys
+./include/test
+./include/u-boot
+./include/usb
+./include/zfs
+./lib
+./lib/bzip2
+./lib/dhry
+./lib/efi
+./lib/efi_loader
+./lib/libfdt
+./lib/lzma
+./lib/lzo
+./lib/rsa
+./lib/tizen
+./lib/zlib
+./Licenses
+./net
+./post
+./post/board
+./post/board/lwmon5
+./post/board/pdm360ng
+./post/cpu
+./post/cpu/mpc83xx
+./post/cpu/mpc8xx
+./post/cpu/ppc4xx
+./post/drivers
+./post/lib_powerpc
+./post/lib_powerpc/fpu
+./scripts
+./scripts/basic
+./scripts/coccinelle
+./scripts/coccinelle/net
+./scripts/kconfig
+./scripts/kconfig/lxdialog
+./test
+./test/dm
+./test/env
+./test/fs
+./test/image
+./test/overlay
+./test/py
+./test/py/tests
+./test/py/tests/vboot
+./test/stdint
+./test/trace
